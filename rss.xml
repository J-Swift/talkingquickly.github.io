<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<generator uri="http://jekyllrb.com" version="3.7.2">Jekyll</generator>
<link href="https://www.talkingquickly.co.uk/rss.xml" rel="self" type="application/atom+xml" />
<link href="https://www.talkingquickly.co.uk/" rel="alternate" type="text/html" />
<updated>2018-07-11T12:27:53+00:00</updated>
<id>https://www.talkingquickly.co.uk/</id>
<title>talkingquickly</title>
<subtitle>rails, docker, stress free deployment and small steps taken quickly</subtitle>
<author>
<name>Ben Dixon</name>
</author>
<entry>
<title>Getting things done while staying sane</title>
<link href="https://www.talkingquickly.co.uk/getting-things-done-while-staying-sane" rel="alternate" type="text/html" title="Getting things done while staying sane" />
<published>2018-04-29T15:40:00+00:00</published>
<updated>2018-04-29T15:40:00+00:00</updated>
<id>https://www.talkingquickly.co.uk/getting-things-done-while-staying-sane</id>
<content type="html" xml:base="https://www.talkingquickly.co.uk/getting-things-done-while-staying-sane">&lt;p&gt;These are the guidelines I aim to follow with the goal of maintaining a high output while still enjoying life and avoiding burnout. I can&amp;#39;t claim to be exceptionally good at sticking to them. As per usual, the &amp;quot;you&amp;quot; here is me, this isn&amp;#39;t advice, it&amp;#39;s just what&amp;#39;s worked for me whenever I&amp;#39;ve managed to stick to it. It&amp;#39;s definitely highly influenced by the dynamics of building technology companies and is very tailored to the quirks of my psyche, ymmv.&lt;/p&gt;

&lt;!--more--&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Be nice to people. The number of situations where anger or aggression are either warranted or productive are so close to zero that it&amp;#39;s not worth considering. The most productive way to respond to emotional or aggravating behaviour in others is generally calm empathy, it&amp;#39;s usually a misunderstanding anyway. Getting irritated over minor misunderstandings sixteen times per day is a pretty solid recipe for burnout but if you want to guarantee it, just add coffee.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Unless you &lt;em&gt;really&lt;/em&gt; care about your point, consider not making it. Be ruthless about which things you chime in on. Maintain a very small surface area of identity and opinion. The exception to this is when debating for fun, but be very careful when doing this that you&amp;#39;re not slipping into your point becoming confused with your identity.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Look out for opinions which become part of your identity. Have you become a &amp;quot;ruby person,&amp;quot; an &amp;quot;apple person&amp;quot; or a &amp;quot;liberal person&amp;quot;. These are the things you&amp;#39;re most likely to be wrong about in the face of overwhelming evidence. Being genuinely open minded / Bayesian in the way you form and revise opinions is truly a super-power. The exception is tabs v spaces, the answers is always spaces.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Work out what your insecure about, this is where you decision making is likely to be irrational and where you&amp;#39;re most likely to fall back to dogmatic, identity based opinions rather than Bayesian decision making.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Anything in your life which you measure by the approval or opinion of others, will be a net source of unhappiness. Your only metric should be whether your actions were the best they could be in the circumstances based on your principles. And this metric should only be relevant insofar as it allows you to improve the quality of your actions in the future. Essentially the stoics got it right. This is really, really, really hard.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For this to work you need principles. Think a lot about what you believe in, what you care about and what&amp;#39;s genuinely important to you. It&amp;#39;s amazingly easy to coast by without doing this.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Watch for people who&amp;#39;s approval you seek and work out why. Generally they will have an attribute you would like to have. Rebase your focus onto your success in completing actions which progress you in attaining that attribute (e.g. things within your control). If the attribute is not acquirable or you do not actually consider those actions a good use of time, re-base your focus onto success being recognising and halting behaviour which is motivated by that approval seeking.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you really believe something, the fact that others disagree should be something you learn to sit comfortably with. We are herd animals so it&amp;#39;s OK this is difficult, you&amp;#39;re fighting biology. Disagreement from somebody who&amp;#39;s opinions you generally value should prompt a re-evaluation, but you shouldn&amp;#39;t chase consensus. Disagreement by somebody who&amp;#39;s opinion you don&amp;#39;t value should be default ignored, see almost all internet arguments ever.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Focus. Switching between tasks is at least an order of magnitude less efficient than focussing on one task at a time. It is not possible to multitask, be gracious to people who believe they can and support them when they burn out.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When meetings are used as precision tools, they can be very productive, unfortunately many aren&amp;#39;t and as a result are a waste of time. Try and time box meetings into specific parts of the day and the week and never go to meetings without an agenda. If you aren&amp;#39;t adding or getting value from a meeting, don&amp;#39;t sit their surreptiously looking at your phone, leave and do something productive with the time. This is not rude, it&amp;#39;s efficient.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Deal with your meeting FOMO. If the only way that information gets to you is via constant catch ups and review meetings then the communication structures you have in place are fundamentally broken. But it&amp;#39;s more likely you&amp;#39;re just scared of letting go. Ask people to summarise outputs from meetings and then ask clarifying questions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Recurring meetings are particularly questionable, if you must have them, make them cancelled by default and  only keep them when an agenda exists in advance, even when there is an agenda, think carefully about whether there really needs to be a meeting for it or if it can be resolved via chat / email.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Prioritise and pick one thing. Start ideally each week and without fail each day with one thing you want to get done. As other things come in, default to deferring or delegating them immediately. Constantly ask yourself if the thing that&amp;#39;s interrupting you is &lt;em&gt;really&lt;/em&gt; more impactful and urgent than the thing you&amp;#39;re working on. Almost everything isn&amp;#39;t as long as you&amp;#39;re doing a good job of picking the &amp;quot;one thing&amp;quot; for the day.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;No, really one thing. If your goal is to build a prototype of x, then use technologies and a framework you know to build that thing. Building a new prototype and doing it in a new language or using a new framework for it is not doing one thing, it&amp;#39;s doing two things. You may still do both, but be clear that you&amp;#39;re doing two things and account for the resulting hit in efficiency.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Have a plan. Ad-hoc decision making is very tiring. On at least a daily basis, have a plan for what you&amp;#39;re going to do, generally this should be driven by a weekly and possibly monthly plan, which themselves should be tightly focussed. Be annoyingly stubborn about deviating from that plan. When you do deviate, make a new plan and then stick to that. Whatever you do, do not allow an interruption to push you into ad-hoc, unstructured time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Your plan should include switching off, time for friends and family and things outside of work. Be especially stubborn about deviating from this part of the plan. This doesn&amp;#39;t mean agendas for date night, it means not skipping date night to focus on upgrading Gitlab or writing revision one thousand nine hundred and sixty three of that blog post.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You will always encounter some people who believe it&amp;#39;s a sign of weakness not to immediately cancel any personal plans for work. These people will always be a net negative both in life overall and in the success of a business venture. Be polite but unwavering in making your position on this clear and if necessary excluding them from anything you are involved with. If you aren&amp;#39;t in a position to do this, consider leaving, &amp;quot;first in last out, nothing else matters&amp;quot; driven cultures are toxic and will eventually implode anyway.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Your plan should be realistic, any plan which regularly requires you to; sleep less than 8 hours, skip meditation or exercise or heavily reduce time with family and loved ones will fail.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be aware of crunch time. Whether it&amp;#39;s shipping a feature, raising money or managing a project which has gone off the rails, sometimes there will be a defined period where all energy and then some has to be diverted to one thing. Recognise that you&amp;#39;re depleting a finite store during these periods due to lack of sleep, exercise and downtime and that the further you or anyone else gets into this period, the less rational decision making will become and the lower the return on each additional hour worked will be. Give yourself and others you&amp;#39;re responsible for time to re-charge afterwards.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Make lists, lots of lists. The worst place to keep everything except hats and sunglasses is your head.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Drink lots of water, avoid caffeine and remember that cheap wine with awesome people will always taste better than a fancy vintage without them.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
<summary>These are the guidelines I aim to follow with the goal of maintaining a high output while still enjoying life and avoiding burnout. I can&amp;#39;t claim to be exceptionally good at sticking to them. As per usual, the &amp;quot;you&amp;quot; here is me, this isn&amp;#39;t advice, it&amp;#39;s just what&amp;#39;s worked for me whenever I&amp;#39;ve managed to stick to it. It&amp;#39;s definitely highly influenced by the dynamics of building technology companies and is very tailored to the quirks of my psyche, ymmv.</summary>
</entry>
<entry>
<title>A Rails development environment with Docker</title>
<link href="https://www.talkingquickly.co.uk/2018/03/rails-development-environment-with-docker-compose/" rel="alternate" type="text/html" title="A Rails development environment with Docker" />
<published>2018-03-04T14:18:00+00:00</published>
<updated>2018-03-04T14:18:00+00:00</updated>
<id>https://www.talkingquickly.co.uk/2018/03/rails-development-environment-with-docker-compose</id>
<content type="html" xml:base="https://www.talkingquickly.co.uk/2018/03/rails-development-environment-with-docker-compose/">&lt;p&gt;Docker and Docker Compose reduces bringing up a development environment on any system which supports Docker to a single command. For me this means the time to a working development environment, even on a fresh machine for a project I haven&amp;#39;t worked on for months or years, is just a few seconds.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;This tutorial is not a comprehensive introduction to either Docker or Docker Compose, for this this I highly recomend the &lt;a href=&quot;https://docs.docker.com/compose/gettingstarted/&quot;&gt;official docker compose tutorial&lt;/a&gt; as a starting point. The steps here will stand alone but it&amp;#39;s definitely beneficial to get familiar with the docker-compose fundamentals at some point.&lt;/p&gt;

&lt;h2&gt;Installing Docker&lt;/h2&gt;

&lt;p&gt;We&amp;#39;ll need to have Docker installed locally &lt;a href=&quot;https://docs.docker.com/install/&quot;&gt;https://docs.docker.com/install/&lt;/a&gt;. We&amp;#39;ll also need &lt;code&gt;docker-compose&lt;/code&gt; installed, for OSX then this is included when installing Docker, for Linux, it must be installed separately and instructions are here; &lt;a href=&quot;https://docs.docker.com/compose/install/#install-compose&quot;&gt;https://docs.docker.com/compose/install/#install-compose&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Dockerising a Rails Application&lt;/h2&gt;

&lt;p&gt;For an existing Rails application the files below should be added to the root of the project. If generating a new project we should create an empty directory with the name matching the desired name of the Rails project and create the files here. We&amp;#39;ll cover generating the Rails application itself using Docker below.&lt;/p&gt;

&lt;p&gt;First we add a file called &lt;code&gt;Dockerfile&lt;/code&gt; to the project root which defines how to build the runtime environment for our application:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;FROM ruby:2.4.2
MAINTAINER YOUR_EMAIL

# Install apt based dependencies required to run Rails as
# well as RubyGems. As the Ruby image itself is based on a
# Debian image, we use apt-get to install those.
RUN apt-get update &amp;amp;&amp;amp; apt-get install -y \
  build-essential \
  nodejs


# Configure the main working directory. This is the base
# directory used in any further RUN, COPY, and ENTRYPOINT
# commands.
RUN mkdir -p /app
WORKDIR /app

# Copy the Gemfile as well as the Gemfile.lock and install
# the RubyGems. This is a separate step so the dependencies
# will be cached unless changes to one of those two files
# are made.
COPY Gemfile Gemfile.lock ./
RUN gem install bundler &amp;amp;&amp;amp; bundle install --jobs 20 --retry 5

COPY . /app
RUN rm -rf tmp/*

ADD . /app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Replacing &lt;code&gt;YOUR_EMAIL&lt;/code&gt; with your email address.&lt;/p&gt;

&lt;p&gt;Then we add a second file called &lt;code&gt;docker-compose.yml&lt;/code&gt; to the project root containing the following:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;version: &amp;quot;3&amp;quot;
services:
  app:
    build: .
    command: rails server -p 3000 -b &amp;#39;0.0.0.0&amp;#39;
    volumes:
      - .:/app:delegated
    ports:
      - &amp;quot;3000:3000&amp;quot;
    environment:
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=postgres
    depends_on:
      - postgres
      - redis


  postgres:
    image: postgres:9.4
    volumes:
      - postgresdata:/var/lib/postgresql/data
    ports:
      - &amp;quot;5432:5432&amp;quot;

  redis:
    image: redis
    command: redis-server --appendonly yes
    volumes:
      - redisdata:/data
    ports:
      - &amp;quot;6379:6379&amp;quot;

volumes:
  postgresdata:
  redisdata:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;The compose file&lt;/h2&gt;

&lt;p&gt;A few elements of this compose file are worth noting as they differ from the many other Rails compose files out there:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We don&amp;#39;t use &lt;code&gt;links&lt;/code&gt;, these are &lt;a href=&quot;https://docs.docker.com/compose/compose-file/#links&quot;&gt;no longer the recommended approach&lt;/a&gt; for establishing communication between containers. Instead services are available by hostname where the hostname will be the name of the service. E.g. in this case our &lt;code&gt;app&lt;/code&gt; conainer can access postgres via the hostname &lt;code&gt;postgres&lt;/code&gt; and redis via the hostname &lt;code&gt;redis&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;:delegated&lt;/code&gt; option on the volume mount for our app directory. This is specific to Docker for Mac, although won&amp;#39;t cause problems on other platforms. Details of what this does are &lt;a href=&quot;https://docs.docker.com/compose/compose-file/#caching-options-for-volume-mounts-docker-for-mac&quot;&gt;available here&lt;/a&gt; but it provides a substantial improvement in filesystem performance on OSX, without which day to day development of Rails applications can be painful. If file performance is still not sufficient for your application, it&amp;#39;s worth considering &lt;a href=&quot;http://docker-sync.io/&quot;&gt;Docker Sync&lt;/a&gt; although the 60x slowdown references on that site is substantially reduced by the sue of &lt;code&gt;delegated&lt;/code&gt; on OSX&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Generating a new application&lt;/h2&gt;

&lt;p&gt;When working with an existing Rails application, we can skip this section. Using Docker to generate the entire application is especially useful when trying to maintain no local development environment at all, so we can develop Rails applications without ever needing a local Ruby install.&lt;/p&gt;

&lt;p&gt;One of the quickest ways to generate a new Rails application is simply to use the pre-built Bitnami image and execute:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;docker run --rm -v $(pwd):/app bitnami/rails:latest rails new my_app --database postgresql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Which will pull the Bitnami image and generate a new Rails app called &lt;code&gt;my_app&lt;/code&gt; in the current directory.&lt;/p&gt;

&lt;p&gt;Alternatively, if you wish to avoid use of a third party image, alongside our &lt;code&gt;Dockerfile&lt;/code&gt;, we&amp;#39;ll need to add a &lt;code&gt;Gemfile&lt;/code&gt; containing the following:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;source &amp;#39;https://rubygems.org&amp;#39; do
  gem &amp;quot;rails&amp;quot;,
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and a blank &lt;code&gt;Gemfile.lock&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then execute:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;docker build -t my_name/my_rails_image .
docker run --rm -v $(pwd):/app my_name/my_rails_image rails new my_app --database postgresql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Which builds an image based on our Dockerfile, tags it with the name &lt;code&gt;my_rails_image&lt;/code&gt; and then runs &lt;code&gt;rails new myapp --database postgresql&lt;/code&gt; within a container based on that image and creates a new Rails application as a subfolder.&lt;/p&gt;

&lt;p&gt;Once we have this image built locally, we can re-use it in future with:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;docker run --rm -v $(pwd):/app my_name/my_rails_image rails new my_app --database postgresql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Dockerising the application&lt;/h2&gt;

&lt;p&gt;Our &lt;code&gt;docker-compose.yml&lt;/code&gt; file will bring up not only our rails application, but supporting Postgres and Redis instances.&lt;/p&gt;

&lt;p&gt;First we&amp;#39;ll make some changes to our Rails application so that all configuration is taken from environment variables. We&amp;#39;ll then update our &lt;code&gt;docker-compose.yml&lt;/code&gt; file to set some environment variables. This lays the groundwork for using something like Hashicorp&amp;#39;s &lt;a href=&quot;https://github.com/hashicorp/envconsul&quot;&gt;envconsul&lt;/a&gt; for managing configuration in production at a later date. It&amp;#39;s also a core tenant of building &lt;a href=&quot;https://12factor.net/config&quot;&gt;12 factor&lt;/a&gt; applications.&lt;/p&gt;

&lt;p&gt;We&amp;#39;ll begin by modifying &lt;code&gt;config/database.yml&lt;/code&gt; to pull connection details from the environment by adding these three lines:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;username: &amp;lt;%= ENV.fetch(&amp;quot;DB_USERNAME&amp;quot;) %&amp;gt;
password: &amp;lt;%= ENV.fetch(&amp;quot;DB_PASSWORD&amp;quot;) %&amp;gt;
host: &amp;lt;%= ENV.fetch(&amp;quot;DB_HOST&amp;quot;) %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These can either be added to the &lt;code&gt;default&lt;/code&gt; section or individually to the &lt;code&gt;development&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt; sections.&lt;/p&gt;

&lt;p&gt;It may look like we could skip this entirely and just use the standard &lt;code&gt;DATABASE_URL&lt;/code&gt; environment variable with something like &lt;code&gt;postgres://username:password@postgres/DB_NAME&lt;/code&gt; but this will cause problems when running commands such as &lt;code&gt;rake db:migrate&lt;/code&gt;. These do not reload environment variables between operating on the test and development databases and therefore raise exceptions when trying to apply migrations to test and development as these will both try and use the same database name.&lt;/p&gt;

&lt;p&gt;We can see these map to the values set in the &lt;code&gt;environment&lt;/code&gt; section of our &lt;code&gt;app&lt;/code&gt; definition in &lt;code&gt;docker-compose.yml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;services:
  app:
    build: .
    command: rails server -p 3000 -b &amp;#39;0.0.0.0&amp;#39;
    volumes:
      - .:/app:delegated
    ports:
      - &amp;quot;3000:3000&amp;quot;
    environment:
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=postgres
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;environment&lt;/code&gt; section allows us to set up the environment variables which will be set within the container. As discussed above, the &lt;code&gt;postgres&lt;/code&gt; service will be available to our container automatically on the hostname &lt;code&gt;postgres&lt;/code&gt; which matches the service name in &lt;code&gt;docker-compose.yml&lt;/code&gt;. The default credentials for the official postgres image are &lt;code&gt;postgres&lt;/code&gt; and &lt;code&gt;postgres&lt;/code&gt; and there&amp;#39;s &lt;a href=&quot;https://hub.docker.com/_/postgres/&quot;&gt;more about customising here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We can apply the same approach to the &lt;code&gt;config/secrets.yml&lt;/code&gt; file if needed as well as anywhere else in the application we want to pass in configuration dynamically. If something like &lt;a href=&quot;https://github.com/bkeepers/dotenv&quot;&gt;dotenv&lt;/a&gt; is in use then we can simply update our local &lt;code&gt;.env&lt;/code&gt; file with the above environment variables, rather than defining them in the compose file.&lt;/p&gt;

&lt;h2&gt;Starting the rails application&lt;/h2&gt;

&lt;p&gt;We can now build the docker image based on our &lt;code&gt;Dockerfile&lt;/code&gt; by executing:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;docker-compose build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once this is complete we can start our application with:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;docker-compose up
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will start postgres, redis and our rails application, exposing the rails application on port 3000 so that we can access it by visiting &lt;a href=&quot;http://localhost:3000&quot;&gt;http://localhost:3000&lt;/a&gt; as usual.&lt;/p&gt;

&lt;h2&gt;Using with pry&lt;/h2&gt;

&lt;p&gt;If we want to use something like &lt;code&gt;pry-rails&lt;/code&gt; to debug our rails application, instead of executing &lt;code&gt;docker-compose up&lt;/code&gt;, we should use:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;docker-compose run --service-ports app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Running one off commands&lt;/h2&gt;

&lt;p&gt;Usually when setting up a rails application we would run &lt;code&gt;rake db:create&lt;/code&gt; and &lt;code&gt;rake db:migrate&lt;/code&gt;. If dockerising an existing application, we&amp;#39;re likely to find that we&amp;#39;re greeted with an error page that the database does not exist.&lt;/p&gt;

&lt;p&gt;To run one off commands using &lt;code&gt;docker-compose&lt;/code&gt; we use the &lt;code&gt;run&lt;/code&gt; command in the format:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;docker-compose run SERVICE_NAME CMD
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So to run &lt;code&gt;rake db:create db:migrate&lt;/code&gt; within the context of our rails application we would use:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;docker-compose run app rake db:migrate db:create
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Similarly to start a console we would run:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;docker-compose run app rails console
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We could run &lt;code&gt;rspec&lt;/code&gt; tests with:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;docker-compose run app rspec spec
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Adding Gems&lt;/h2&gt;

&lt;p&gt;When adding new gems, we first update the Gemfile, then execute:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;docker-compose run app bundle
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To update the &lt;code&gt;Gemfile.lock&lt;/code&gt; and then:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;docker-compose build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To cache the gems in the image.&lt;/p&gt;

&lt;h2&gt;Bash&lt;/h2&gt;

&lt;p&gt;We can launch a bash shell in our app container using:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;docker-compose run app bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It&amp;#39;s important to bear in mind that each invocation of the above runs in a separate, completely isolated, container and so outside the &lt;code&gt;/app&lt;/code&gt; directory which is bind mounted to our local directory, the file-systems are transitory and independent of one another.&lt;/p&gt;

&lt;p&gt;Being able to run a shell within our app container can be the key to avoiding a lot of frustrating workflow issues when working in a Docker based development environment.&lt;/p&gt;

&lt;p&gt;A great example is when upgrading a Rails version. The workflow is typically:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Update the version of GEM1 within the &lt;code&gt;Gemfile&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Execute &lt;code&gt;bundle update GEM1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Look to see which dependency issues are raised&lt;/li&gt;
&lt;li&gt;Update the &lt;code&gt;Gemfile&lt;/code&gt; again&lt;/li&gt;
&lt;li&gt;etc etc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This can be slow and painful if a separate &lt;code&gt;docker-compose run app ...&lt;/code&gt; is required every time. Instead we can use &lt;code&gt;docker-compose run app bash&lt;/code&gt; once and then iterate within that container as many times as we want. Once it works we simply jump out of the container and execute &lt;code&gt;docker-compose build&lt;/code&gt; to persist the new gems to the image.&lt;/p&gt;

&lt;h2&gt;Deploying to production&lt;/h2&gt;

&lt;p&gt;Part two covers how to deploy this application to a Kubernetes Cluster on any VPS or Bare Metal provider without having to learn several thousand previously unheard of pieces of terminology.&lt;/p&gt;

&lt;p&gt;Feel free to ping me on twitter &lt;a href=&quot;https://www.twitter.com/talkingquickly&quot;&gt;@TalkingQuickly&lt;/a&gt; with any questions or feedback, in particular I&amp;#39;d love to know if a screencast version of this tutorial would be useful?&lt;/p&gt;
</content>
<summary>Docker and Docker Compose reduces bringing up a development environment on any system which supports Docker to a single command. For me this means the time to a working development environment, even on a fresh machine for a project I haven&amp;#39;t worked on for months or years, is just a few seconds.</summary>
</entry>
<entry>
<title>Startup Reading List (2018 Edition)</title>
<link href="https://www.talkingquickly.co.uk/2017/11/startup-reading-list/" rel="alternate" type="text/html" title="Startup Reading List (2018 Edition)" />
<published>2017-11-28T08:00:00+00:00</published>
<updated>2017-11-28T08:00:00+00:00</updated>
<id>https://www.talkingquickly.co.uk/2017/11/startup-reading-list</id>
<content type="html" xml:base="https://www.talkingquickly.co.uk/2017/11/startup-reading-list/">&lt;p&gt;Something most of the startup and product people I look up to have in common is that they read, a lot. They also challenge what they read. Rather than reading a chapter, then immediately trying to implement what they&amp;#39;ve read, their books are full of post-it notes and scribbles, dinners and emails are full of debates on one methodology or idea v another.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Each has their own constantly evolving approach, but it&amp;#39;s one developed with the benefit of the learnings from many hundreds of other people. This reading list is the books and articles which I return to most frequently which have had the biggest impact on my approach.&lt;/p&gt;

&lt;h2&gt;General &amp;quot;Startups&amp;quot;&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://amzn.to/2ka2IH0&quot;&gt;Founders Stories (Book)&lt;/a&gt;. Insightful series of interviews covering everything from unexpected pivots to the impact startups have on your personal life.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://amzn.to/2BxKUty&quot;&gt;Zero To One (Book)&lt;/a&gt;. Find an important truth not many people agree with you on, aim to build a monopoly business based on that truth. And make sure you nail Sales, Marketing, Hiring etc while you&amp;#39;re at it.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://amzn.to/2ByT5Ge&quot;&gt;High Output Management (Book)&lt;/a&gt;. One of the best books on management I&amp;#39;ve come across. Heavy focus on a managers output being a leveraged function of his direct reports. So to maximise this output, must maximise ability of direct reports to produce output.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://paulgraham.com/startupideas.html&quot;&gt;How to get startup ideas (Article)&lt;/a&gt;. Don&amp;#39;t look for &amp;quot;startup ideas,&amp;quot; Look for problems which need solving, which you care about being solved&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://amzn.to/2k8bRjo&quot;&gt;Anything you want (Book)&lt;/a&gt;. Everything should be about customers, good ideas don&amp;#39;t feel special, they feel like common sense that no-one else gets. If you create a business you get to write the rules, make sure they&amp;#39;re the ones you actually want.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://amzn.to/2BxcnM1&quot;&gt;Making Ideas Happen (Book)&lt;/a&gt;. Very practical advice on moving from &amp;quot;here&amp;#39;s an idea&amp;quot; to actually doing something. Arguably more of a productivity book but essential in unstructured environments like startups.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://amzn.to/2kb2KOU&quot;&gt;The art of the start (Book)&lt;/a&gt;. Another really practical look at actually making things happen rather than just talking about them.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://amzn.to/2BtbKD3&quot;&gt;Smart and gets things done (Book)&lt;/a&gt;. Focused on hiring developers but applicable generally, clues in the title, &amp;quot;good&amp;quot; people to hire are smart and get stuff done, the book focuses on how to identify these traits.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://startupclass.samaltman.com/&quot;&gt;How To Start A Startup (Lecture Series from Stanford)&lt;/a&gt;. Incredible series of lectures from people who&amp;#39;ve actually done it. Everything from product to culture to hiring.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Product Development &amp;amp; Product Management&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://amzn.to/2kauV0g&quot;&gt;The Four Steps to the Epiphany (Book)&lt;/a&gt;. The original and most comprehensive book on the &amp;quot;lean&amp;quot; approach to startups and product development.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://amzn.to/2Bm6G2w&quot;&gt;Lean Startup (Book)&lt;/a&gt; (first half). The most accessible and widely read introduction to the &amp;quot;lean&amp;quot; approach to startups and product development. Gets a bit repetitive towards the end.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://a16z.com/2012/06/15/good-product-managerbad-product-manager/&quot;&gt;Good product manager bad product manager (Article)&lt;/a&gt;. Caveatted with a warning by the author that it was written over 15 years ago but I still think one of the best quick-reads on what&amp;#39;s important from a product manager.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://amzn.to/2kbb411&quot;&gt;Thinking fast and slow (Book)&lt;/a&gt;. One of the most comprehensive introductions to psychological biases, how people think and why people often don&amp;#39;t behave rationally.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://paulgraham.com/ds.html&quot;&gt;Do things that don&amp;#39;t scale (Article)&lt;/a&gt;. The initial push that makes startups take off is almost always hugely unscalable. This isn&amp;#39;t a bad thing.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.paulgraham.com/makersschedule.html&quot;&gt;Makers Schedule, Managers Schedule (Article)&lt;/a&gt;. Makers and Managers are doing fundamentally different things which require different ways of working. Don&amp;#39;t fall into the trap of imposing manager ways of working on makers.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@dunn/get-one-thing-right-89390244c553&quot;&gt;Get one thing right (Article)&lt;/a&gt;. Descriptions in the title.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://hackernoon.com/12-signs-youre-working-in-a-feature-factory-44a5b938d6a2&quot;&gt;How you know you&amp;#39;re in a feature factory (Article)&lt;/a&gt;. There&amp;#39;s nothing worse than feeling like you&amp;#39;re churning out features without any real understanding of whether they &amp;quot;worked&amp;quot; and what impact they had on the business. It&amp;#39;s also painfully easy to fall into so this post provides a helpful list of things to look out for.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://hitenism.com/amazon-working-backwards/&quot;&gt;Working backwards (Article)&lt;/a&gt;. In the AWS product team, Amazon write the press release, then the manual, then the spec. Defining the end goal first helps focus everything else.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@johnpcutler/beat-the-feature-factory-run-pre-cap-design-studios-725d1c83ecd7&quot;&gt;Using design studios to beat the feature factory (Article)&lt;/a&gt;. Similar to the Amazon &amp;quot;press release first&amp;quot; approach but more actionable in smaller organizations. Design the retrospective slide first.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://amzn.to/2k9Pfiy&quot;&gt;Hooked - How to Build Habit Forming Products (Book)&lt;/a&gt; (the first few chapters). This book can get somewhat repetitive but a good look at the principles underlying addictive products and how to leverage this.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Big Picture&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://amzn.to/2Bwyu5h&quot;&gt;The master algorithm (Book)&lt;/a&gt;. The single best book on approaches to machine learning / artificial intelligence I&amp;#39;ve encountered. It&amp;#39;s easy to become skeptical with everyone throwing the term &amp;quot;AI&amp;quot; around. This is the book which made me want to get involved with it again.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://amzn.to/2kb3MdK&quot;&gt;The Hard Thing about Hard Things (Book)&lt;/a&gt;. Drives home that fundamentally there can&amp;#39;t be a &amp;quot;playbook&amp;quot; for solving hard problem x, because it&amp;#39;s never been solved before. Filled with advice and practical experience for how to handle that.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;General &amp;quot;Life&amp;quot;&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://amzn.to/2BlfFRq&quot;&gt;Fooled by Randomness (Book)&lt;/a&gt;. Humans tend to see patterns everywhere, even where there aren&amp;#39;t any. Lots of examples of where this tends to happen, how it messes with our decision making and what to do about it. Probably the single book that&amp;#39;s had the biggest impact on how I think about the world.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://amzn.to/2BwRSyZ&quot;&gt;The Four Hour Work Week (Book)&lt;/a&gt;. Initially dismissed this book for the spammy title. When I eventually read it found it densely packed with actionable information about how to allocate time and what conventional business &amp;amp; financial wisdom should be considered harmful. Also strongly recommend the weekly &lt;a href=&quot;https://tim.blog/podcast/&quot;&gt;Tim Ferris Podcast&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://amzn.to/2k9UzSU&quot;&gt;Elon Musk (Book)&lt;/a&gt;. Whatever you think about the guy, he seems to ship a lot of stuff...&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://amzn.to/2k6AOeS&quot;&gt;Surely you&amp;#39;re Joking Mr Feynman (Book)&lt;/a&gt;. The definition of a curious mind, truly amazing man and life.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://amzn.to/2BxtcpV&quot;&gt;How to win friends and influence people (Book)&lt;/a&gt;. Still the definitive guide to improving  people skills.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://amzn.to/2BxcZ4h&quot;&gt;Getting Things Done (Book)&lt;/a&gt;. I&amp;#39;ve never met anyone who actually follows the fiendishly complicated ToDo list system Dave Allen suggests here. But it contains pretty much all the building blocks you&amp;#39;ll ever need to come up with a task tracking system which suits you.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://casnocha.com/2010/05/50-ways-to-expose-yourself-to-randomness.html&quot;&gt;How to expose yourself to randomness (Article)&lt;/a&gt;. Most big things have a huge &amp;quot;luck&amp;quot; component, being exposed to randomness a lot dramatically increases the odds of being lucky.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.stevepavlina.com/blog/2005/05/how-to-become-an-early-riser/&quot;&gt;How to be an early riser (Article)&lt;/a&gt;. Something &lt;em&gt;most&lt;/em&gt; successful people seem to have in common is getting up early, being a morning person is definitely learnable.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Things I&amp;#39;m Embarrassed I Still Haven&amp;#39;t Read&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://amzn.to/2kbKDYV&quot;&gt;The Innovators Dilemma (Book)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://amzn.to/2Bzxeyr&quot;&gt;The Innovators Solution (Book)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://amzn.to/2BxGItS&quot;&gt;The Mythical Man Month (Book)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://amzn.to/2nfeSQ7&quot;&gt;The Everything Store: Jeff Bezos and the Age of Amazon (Book)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://amzn.to/2njxcYq&quot;&gt;The Design of Everyday Things (Book)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://amzn.to/2BzZlNJ&quot;&gt;Don&amp;#39;t Make Me Think (Book)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://amzn.to/2Bxc1ot&quot;&gt;Shoe Dog (Book)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;But I don&amp;#39;t have time!&lt;/h2&gt;

&lt;p&gt;The above could easily take a year to read, my suggested &amp;quot;hack&amp;quot; to gain maximum knowledge for minimum reading would be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Watch every lecture in the &lt;a href=&quot;http://startupclass.samaltman.com/&quot;&gt;How To Start A Startup (Lecture Series from Stanford)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Read &lt;a href=&quot;http://paulgraham.com/startupideas.html&quot;&gt;How to get startup ideas&lt;/a&gt; and &lt;a href=&quot;http://paulgraham.com/ds.html&quot;&gt;Do things that don&amp;#39;t scale&lt;/a&gt; by Paul Graham. Generally &lt;a href=&quot;http://www.paulgraham.com/articles.html&quot;&gt;everything PG has written&lt;/a&gt; has a good return on time taken to read v insight provided.&lt;/li&gt;
&lt;li&gt;Read &lt;a href=&quot;http://amzn.to/2kauV0g&quot;&gt;The Four Steps to the Epiphany&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
<summary>Something most of the startup and product people I look up to have in common is that they read, a lot. They also challenge what they read. Rather than reading a chapter, then immediately trying to implement what they&amp;#39;ve read, their books are full of post-it notes and scribbles, dinners and emails are full of debates on one methodology or idea v another.</summary>
</entry>
<entry>
<title>2015 In Review</title>
<link href="https://www.talkingquickly.co.uk/2016/05/2015-in-review/" rel="alternate" type="text/html" title="2015 In Review" />
<published>2016-05-06T08:00:00+00:00</published>
<updated>2016-05-06T08:00:00+00:00</updated>
<id>https://www.talkingquickly.co.uk/2016/05/2015-in-review</id>
<content type="html" xml:base="https://www.talkingquickly.co.uk/2016/05/2015-in-review/">&lt;p&gt;May 2016 seems like a reasonable interval to have given 2015 to sink in. 2015 was expected to begin at a Full Moon Party on one or other island off the coast of Thailand. Instead it began with a hastily booked flight back to London and a week or so recovering from three days of hallucinations and dehydration on Aonang - they really do food poisoning properly there. Can&amp;#39;t say I&amp;#39;m proud for bailing due to food poisoning; live and learn.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;But from a shaky start came one of the best years yet. From 13 countries to being hypnotised on stage by Derren Brown in front of 5000 people, it worked out pretty well.&lt;/p&gt;

&lt;h2&gt;Products&lt;/h2&gt;

&lt;h3&gt;Make It With Code&lt;/h3&gt;

&lt;p&gt;As promised in 2015, Make It With Code, our project to teach none technical people to code started to roll out industry specific courses. Our first - Coding For Community Managers - with the awesome CMX hub in San Francisco.&lt;/p&gt;

&lt;p&gt;The success stories have been heartening, from people getting full time to jobs off the back of what they started learning with us to those who&amp;#39;ve freed up days every month with what they&amp;#39;ve been able to automate. That&amp;#39;s why we created it.&lt;/p&gt;

&lt;p&gt;But we&amp;#39;re firm believers in the rule of 10x. To be a game changing business, what we create has to be 10 times better than what&amp;#39;s out there now.&lt;/p&gt;

&lt;p&gt;Our mission was to empower none technical people to use code to make their jobs better. We got people there faster and with less time required than most of what&amp;#39;s out there, but it&amp;#39;s still a lot of time.&lt;/p&gt;

&lt;p&gt;Our unique approach to teaching had many benefits over competing ones, but it&amp;#39;s just not 10x better.&lt;/p&gt;

&lt;p&gt;Our mission is still better met by those people becoming masters of Zapier, Google Sheets and Typeform, then using those to glue together SaaS products to automate their day to day work.&lt;/p&gt;

&lt;p&gt;This is not however a post mortem.&lt;/p&gt;

&lt;p&gt;Whilst we took the decision in mid 2015 that Make It With Code will not be continuing as a for-profit entity, we&amp;#39;re proud of the courses and methodology we created. If people want to learn to code in a practical way, we&amp;#39;d still love them to give it a go.&lt;/p&gt;

&lt;p&gt;All Make It With Code courses will be available free of charge, with
recommendations for 3rd party cloud IDE&amp;#39;s.&lt;/p&gt;

&lt;p&gt;We&amp;#39;re equally proud of the technology we created. Dacker, our open source docker orchestration tool is already open source and on the list of &amp;quot;blog posts I really must write&amp;quot; is to document how anyone can provide create browser based IDE&amp;#39;s using Docker, Codebox and some Ruby magic.&lt;/p&gt;

&lt;h3&gt;Reliably Deploying Rails&lt;/h3&gt;

&lt;p&gt;When I accidentally started writing Reliably Deploying Rails Applications in late 2013, I estimated a solid three months to get it finished.&lt;/p&gt;

&lt;p&gt;17 months later - sitting in an AirBnB in London using a hacked together Ubuntu laptop because everything I owned had been stolen in Budapest the week before - I ran out of excuses. I set to the &amp;quot;Percentage Complete&amp;quot; to 100%.&lt;/p&gt;

&lt;p&gt;Promptly nobody noticed and nothing changed. Sales continued at the same rate and I made changes and tweaks as readers suggested them.&lt;/p&gt;

&lt;p&gt;The entire book has been re-written twice based on feedback from an amazing community of readers who have been unbelievably supportive in suggesting where things could be clearer or add more value. &amp;quot;Complete&amp;quot; doesn&amp;#39;t mean it will stop receiving updates, but that I&amp;#39;m banning myself from another re-write in the near future.&lt;/p&gt;

&lt;p&gt;There are thousands of things I&amp;#39;d like to improve, it&amp;#39;s far too long overall and some important sections are too short. Bits of it were outdated before I&amp;#39;d finished writing them and of course I&amp;#39;ve learned things since I wrote it which I&amp;#39;d like to incorporate.&lt;/p&gt;

&lt;p&gt;But writing it, speaking about it at Railsconf and chatting to hundreds of readers has been a spectacularly positive experience.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s now sold about 1200 copies which gives revenue of around $20k as well as being translated into both Russian &amp;amp; Chinese. It continues to sell a few copies every week organically. I cannot reccommend Leanpub enough to anyone who&amp;#39;s thinking of writing a technical book.&lt;/p&gt;

&lt;h3&gt;Active In Time&lt;/h3&gt;

&lt;p&gt;Since 2013 I&amp;#39;ve been leading the backend team at Active In Time to provide both a timetabling system used by the likes of the London Olympic Pool and the swimming app Speedo Fit (tm).&lt;/p&gt;

&lt;p&gt;Both the experience of managing the technical side of the roll-out across Asia, Europe &amp;amp; America and of working with Dan, Chris, Kev, Ted, Hector and the rest of the team has been amazing.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s their flexibility and open-ness to modern working styles which has allowed me to live abroad and spend over a year traveling while I work.&lt;/p&gt;

&lt;p&gt;As of July 2015 I&amp;#39;ve been scaling back from my work on Active In Time to focus on...&lt;/p&gt;

&lt;h3&gt;Catapult&lt;/h3&gt;

&lt;p&gt;It often seems that there are relatively few large industries which technology has not changed completely. Temporary recruitment is one of those.&lt;/p&gt;

&lt;p&gt;The existing solution; temporary recruitment agencies, are expensive, opaque, and - based on many conversations with both users of these agencies and their staff - provide a poor quality experience to both employers and temps.&lt;/p&gt;

&lt;p&gt;Catapult is an on demand staffing platform focussed on always putting staffs interests first. We provide staff to the retail, office and hospitality sectors. This ranges from providing sickness cover in under an hour to allowing businesses to dynamically scale up and down their staffing based on how busy they are.&lt;/p&gt;

&lt;p&gt;In Q4 2015, Steffen, Oli and I raised GBP1m in seed funding from a range of extremely supportive investors. On the tech side, having begun development in September 2015; myself, James &amp;amp; Kev released the web based employer interface and iOS + Android candidate apps at the start of November. After a successful closed Beta November - January, the platform was opened up to all of London and is currently growing rapidly.&lt;/p&gt;

&lt;h2&gt;Speaking And Conferences&lt;/h2&gt;

&lt;h3&gt;Railsconf 2015&lt;/h3&gt;

&lt;p&gt;After 2014&amp;#39;s beginners talk on deployment, 2015 called for something more advanced. At Make It With Code, Docker isn&amp;#39;t just something we&amp;#39;ve used to deploy, it&amp;#39;s a core part of our application.&lt;/p&gt;

&lt;p&gt;Using Dockers API, our Rails application orchestrates and manages a fleet of containers, providing a full cloud based IDE for each student. This talk focused on how this deep integration has allowed us to add value where competitors couldn&amp;#39;t.&lt;/p&gt;

&lt;p&gt;The talk seemed to be well received and was great fun to give. Based on the questions afterwards, there&amp;#39;s still a gap between &amp;quot;Docker is going to be big&amp;quot; and &amp;quot;How does this actually make me life easier&amp;quot;.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot;
src=&quot;https://www.youtube.com/embed/NGcT0dGivoM&quot; frameborder=&quot;0&quot;
allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Refresh Conference&lt;/h3&gt;

&lt;p&gt;I was incredibly excited to be invited to give a talk at the first Refresh Conference, organised by TransferWise. Tallinn is one of my favourite cities so an excuse to spend a little longer there was welcomed!&lt;/p&gt;

&lt;p&gt;Instead of focusing on &amp;quot;how to do this,&amp;quot; this one focused on &amp;quot;how not to do this,&amp;quot; specifically all of things I got wrong when I started deploying Rails applications.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot;
src=&quot;https://www.youtube.com/embed/umVGZVgHHIU&quot; frameborder=&quot;0&quot;
allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Tech Crunch Disrupt Hackathon&lt;/h3&gt;

&lt;p&gt;In keeping with tradition, OldWhiteWizard and I totally failed to plan anything in advance of the Tech Crunch Disrupt Hackathon.&lt;/p&gt;

&lt;p&gt;We ended up building a chatbot, based around the Telegram API, which analyses how the members of the chat talk about different TV Shows and made recommendations accordingly.&lt;/p&gt;

&lt;p&gt;Possibly the highlight was how many people didn&amp;#39;t appreciate that naming it &amp;quot;Murdoch&amp;quot; was a tongue in cheek reference to Sky&amp;#39;s role as a sponsor and the phone hacking allegations around our favorite tabloid toting Rupert.&lt;/p&gt;

&lt;p&gt;You can watch the pitch and read what Techcrunch had to say about it
here
&lt;a href=&quot;https://techcrunch.com/2015/12/06/murdoch-eavesdrops-on-your-chats-to-give-recommendations/&quot;&gt;https://techcrunch.com/2015/12/06/murdoch-eavesdrops-on-your-chats-to-give-recommendations/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The app was well received and we won the Sky prize. On a more serious note the underlying principles - that the next big app ecosystem will be built around chat - is one I strongly believe in.&lt;/p&gt;

&lt;h2&gt;Health&lt;/h2&gt;

&lt;p&gt;2015 was a little sideways for health, for most of Q4 I had a good gym routine but running, nutrition and the like suffered while I was traveling.&lt;/p&gt;

&lt;h2&gt;Travel&lt;/h2&gt;

&lt;p&gt;This was definitely a good year for travel;&lt;/p&gt;

&lt;h3&gt;Amsterdam&lt;/h3&gt;

&lt;p&gt;For the gory details &lt;a href=&quot;/travel/2015-05-25-dispatches-amsterdam/&quot;&gt;check out the dispatches&lt;/a&gt;, this is still my favourite wine list of all time:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/travel/amsterdam/wine-list.jpg&quot; alt=&quot;Wine List, Red or White&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Prague&lt;/h3&gt;

&lt;p&gt;My first visit to Prague was about seven years ago and the main surviving memory was bar crawls. This time it was ham, a lot of ham.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/travel/prague/ham.jpg&quot; alt=&quot;A lot of ham&quot;&gt;&lt;/p&gt;

&lt;p&gt;More in dispatches.&lt;/p&gt;

&lt;h3&gt;Budapest&lt;/h3&gt;

&lt;p&gt;Budapest was one of the more eventful destinations on this trip. From city tours in taxi&amp;#39;s trying to find a hospital &lt;a href=&quot;/travel/2015-06-12-failing-hard-in-hungary/&quot;&gt;to having all of my possessions stolen&lt;/a&gt;, somehow it&amp;#39;s still one of my favourite cities of all time.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/travel/budapest/parliament.jpg&quot; alt=&quot;Budapest Parliament&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Hamburg&lt;/h3&gt;

&lt;p&gt;Having spent less than 24 hours in Hamburg, I&amp;#39;m not sure I can claim to have learned a huge amount about the city. But there was some incredible rock n roll and some very confusing ticket machines. And a really complicated card game.&lt;/p&gt;

&lt;h3&gt;Berlin&lt;/h3&gt;

&lt;p&gt;For some reason when I think of Berlin I think of Vietnamese food and breakfast. Ana and I stumbled over this breakfast whilst completely starving and starting to wonder if the late night clubs meant that Saturday breakfast was actually served on Sunday morning.&lt;/p&gt;

&lt;h3&gt;Warsaw&lt;/h3&gt;

&lt;p&gt;Completely inappropriately the first thing Warsaw will always make me think of is giant American style burgers. For logistical reasons I actually ended up in Warsaw several times, and this burger joint was my &amp;quot;safe haven&amp;quot; when I needed a guaranteed good meal.&lt;/p&gt;

&lt;p&gt;What really got me about Warsaw was how kind people were once they got chatting. I co-worked there for several days, shared cakes with them in the communal kitchen and at the end they wouldn&amp;#39;t let me pay a penny.&lt;/p&gt;

&lt;h3&gt;Vienna&lt;/h3&gt;

&lt;p&gt;&amp;quot;Fancy going for a swim in the Danube?&amp;quot;. Yes. Yes I did. Sometimes my tenancy to blindly say yes without really considering what it is works out rather well.&lt;/p&gt;

&lt;p&gt;Ten minutes later, we&amp;#39;d hired bikes and were cycling through Vienna in the late afternoon sun in search of the bit of the Danube which was good for swimming. Or Something.&lt;/p&gt;

&lt;p&gt;Forty minutes, some questionable maneuvers down one way streets and the odd U-turn and our money, keys and phones were &amp;quot;hidden&amp;quot; in our shoes on a jetty. A healthy British dose of &amp;quot;it&amp;#39;s nice once you&amp;#39;re in,&amp;quot; &amp;quot;is it? is it really?&amp;quot; and we were swimming towards the sound of reggae.&lt;/p&gt;

&lt;p&gt;A brief detour around a herd (yep herd, sticking with it) of swans who were most definitely not more scared of us than we were of them and we were floating in the evening sun, watching live reggae being performed in front of a makeshift speaker stack.&lt;/p&gt;

&lt;h3&gt;Tallinn&lt;/h3&gt;

&lt;p&gt;It&amp;#39;s kind of hard not to fall in love with the Baltics. I arrived in Tallinn in July when it barely gets dark, giving nights out a slightly surreal feeling.&lt;/p&gt;

&lt;p&gt;One of the creepiest places I&amp;#39;ve ever been is the old soviet prison there, it&amp;#39;s something straight out of a horror movie;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2015-in-review/travel/prison-tallin.jpg&quot; alt=&quot;Soviet Prison inRiga&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Riga&lt;/h3&gt;

&lt;p&gt;Two things stand out, the &lt;a href=&quot;https://www.tripadvisor.co.uk/ShowUserReviews-g274967-d1869541-r80012720-Sefpavars_Vilhelms-Riga_Riga_Region.html&quot;&gt;pancake buffet&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2015-in-review/travel/riga-pancakes.jpg&quot; alt=&quot;Pancake BuffetRiga&quot;&gt;&lt;/p&gt;

&lt;p&gt;and Elvis reborn:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2015-in-review/travel/riga-rock-n-roll.jpg&quot; alt=&quot;Elvis Reborn&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Vilnius&lt;/h3&gt;

&lt;p&gt;Probably the friendliest place I&amp;#39;ve been to - which seems to suprise all of the Lithuanians I meet in London. It was nearly impossible to sit down in a bar without a stranger starting a conversation.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s also one of the best dressed cities I visited. Vintage shops are everywhere and the city seems to be full of people who actually know what to look for when going into one. Tom - the best dressed traveler I&amp;#39;ve ever encountered, fitted right in.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2015-in-review/travel/vilnius-best-dressed.jpg&quot; alt=&quot;The Best Dressed Traveller&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Krakow&lt;/h3&gt;

&lt;p&gt;It&amp;#39;s the journey to Krakow I&amp;#39;ll never quite forget. After literally nearly some planning we boarded a bus from Vilnius to Warsaw where we would &amp;quot;get on a bus or train or something&amp;quot; to Krakow. Yep, because that&amp;#39;s how it works.&lt;/p&gt;

&lt;p&gt;On arrival in Warsaw we walked around looking for the main bus station. The main bus station is not in the middle of Warsaw. After a minor battle with public transport and some more aimless walking, our elation at finding it was short lived - the next bus with seats available was in two days.&lt;/p&gt;

&lt;p&gt;We eventually found a train from where we first started, the rest of Krakow is something of a blur, fairly sure there were Irish Accents involved.&lt;/p&gt;

&lt;h3&gt;Paris&lt;/h3&gt;

&lt;p&gt;After a brief stopover in Berlin, I arrived at Charles De Galle having not slept for over 30 hours. Dazed and confused I defaulted to a place of safety.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m still not sure which one of the Mutinerie crew came down and put a blanket over me when I arrived unannounced, having not been a member for over a year, and went straight downstairs to the quiet room to sleep. But the fact someone did is a tribute to what makes Mutinerie so much more than just a co-working space.&lt;/p&gt;

&lt;h3&gt;Portugal&lt;/h3&gt;

&lt;p&gt;A working trip to Portugal with the AIT crew. I still can&amp;#39;t get over the combiantion of wide, banked, US style Freeway exits, which everyone takes at great speed - terminated by blind corners and roundabouts. Utterly terrifying!&lt;/p&gt;

&lt;h3&gt;Perth&lt;/h3&gt;

&lt;p&gt;I&amp;#39;m starting to understand why people keep moving to Australia. I&amp;#39;m not sure if it&amp;#39;s the proximity of the beach, the fact that - sweeping statement  warning - Australians just generally seem to be nice easy going people, or that the weather is so damn good. But I&amp;#39;d be lying if I said I wasn&amp;#39;t tempted.&lt;/p&gt;

&lt;h3&gt;Margaret River&lt;/h3&gt;

&lt;p&gt;There are so many very eloquent things I should saw about Margret River. About the scenery, the beaches, the subtle flavors of the wine, things like that. Instead I&amp;#39;m left with no choice but to talk about the free food, and free wine. Just so much of it.&lt;/p&gt;

&lt;p&gt;The Chocolate factory has huge bowls of chocolate you just help yourself from. You arrive at a vineyard and are presented with at least five or six wines to try. I ate my bodyweight in different breads, olives &amp;amp; dips containing enough Chilli to kill a man. All for free.&lt;/p&gt;

&lt;h3&gt;Austria&lt;/h3&gt;

&lt;p&gt;What happened in Austria stays in Austria. But I can confirm it is possible - but not advisable - to drink a Ski Chalet bar out of Jaegarmeister.&lt;/p&gt;

&lt;h2&gt;Derren Brown? Huh?&lt;/h2&gt;

&lt;p&gt;In a wonderful series of accidents, not only were our tickets to see Derren Browne - the stage hypnotist - upgraded at the last minute, I ended up on stage, being hypnotised for the finale.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m still not allowed to say what actually happened. But as proof, here&amp;#39;s a photo which definitely shouldn&amp;#39;t exist of me completely under, while on stage in front of 5000 people:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2015-in-review/derren-brown.jpeg&quot; alt=&quot;Elvis Reborn&quot;&gt;&lt;/p&gt;

&lt;p&gt;It&amp;#39;s been a good year!&lt;/p&gt;
</content>
<summary>May 2016 seems like a reasonable interval to have given 2015 to sink in. 2015 was expected to begin at a Full Moon Party on one or other island off the coast of Thailand. Instead it began with a hastily booked flight back to London and a week or so recovering from three days of hallucinations and dehydration on Aonang - they really do food poisoning properly there. Can&amp;#39;t say I&amp;#39;m proud for bailing due to food poisoning; live and learn.</summary>
</entry>
<entry>
<title>What I&amp;#39;d tell myself about startups if I could go back 5 years.</title>
<link href="https://www.talkingquickly.co.uk/2015/04/what-id-tell-myself-about-startups/" rel="alternate" type="text/html" title="What I'd tell myself about startups if I could go back 5 years." />
<published>2015-04-02T11:34:00+00:00</published>
<updated>2015-04-02T11:34:00+00:00</updated>
<id>https://www.talkingquickly.co.uk/2015/04/what-id-tell-myself-about-startups</id>
<content type="html" xml:base="https://www.talkingquickly.co.uk/2015/04/what-id-tell-myself-about-startups/">&lt;p&gt;This is, in no particular order, what I&amp;#39;d tell myself about startups if I could go back in time to when I first got involved. Which is probably the same as what I&amp;#39;ve learned. This is most definitely not advice, the &amp;quot;you&amp;quot; here is directed at me. So is &amp;quot;I&amp;quot;. Grammar is hard.&lt;/p&gt;

&lt;!--more--&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;You&amp;#39;re definitely going to end up building too much and shipping too late. Be obsessive about avoiding this&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Someone&amp;#39;s always already working on the same idea and that&amp;#39;s not a bad thing&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Always refuse if someone asks you to sign an NDA before hearing their idea&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Like it or not, most networking in London is focused around drinking. Find a way to deal with that without having a constant hangover&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The people who are really getting somewhere aren&amp;#39;t the people who are always out for drinks&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Linear growth can be worse than no growth&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Most people who talk about failing fast, aren&amp;#39;t actually practicing this&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It&amp;#39;s really easy to kid yourself that you&amp;#39;re &amp;quot;doing customer development&amp;quot; when actually you&amp;#39;re finding ways to make what your customers are saying fit with what you want to build&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Everyone has a hidden stash of domains they&amp;#39;ve never used&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It&amp;#39;s really easy to become hyper-critical and respond to every idea with &amp;quot;yeah but that won&amp;#39;t work because of x&amp;quot;. This is lazy, don&amp;#39;t do it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be especially careful to avoid the above when talking to people who are new to the scene. Call out other people who do it&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It&amp;#39;s really hard to listen to someone pitching an idea you&amp;#39;ve seen fail several times already and focus on working out if there&amp;#39;s something slightly different and interesting there&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Someone being a technically competent developer does not mean they know how to ship things. I&amp;#39;d always rather work with someone who ships over someone who&amp;#39;s technically brilliant&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The programming language/ framework wars are great fun in the pub, but of limited value in real life&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A good developer can pick up any language or platform in a few weeks&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I still don&amp;#39;t know any real investors&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Constantly exaggerating how well you&amp;#39;re doing can be very tiring. It makes it harder to publicly celebrate the real victories&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It&amp;#39;s really hard to build a product if you don&amp;#39;t have a big personal investment in the problem it solves&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Falling in love with a product (rather than the problem) is really dangerous&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can get away without knowing how a hash table works, but it&amp;#39;s really satisfying when you eventually learn it&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Same goes for Big O notation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Overnight success isn&amp;#39;t a thing. The Social Network is still a great movie&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I still don&amp;#39;t understand PR&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Most technical solutions are trivial compared to how you get the product into peoples hands&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Make something people want is probably a less useful heuristic than make something you want&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;But you wanting it doesn&amp;#39;t mean enough people want it for it to be a business&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you don&amp;#39;t have first hand experience of an industry, you&amp;#39;re probably wrong about how it works, what problems they have and so how they should be solved. Talk to people&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;quot;Ads&amp;quot; are where business models go to die&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;quot;We&amp;#39;ll monetize the data&amp;quot; is the new &amp;quot;Ads&amp;quot;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The people you end up wanting to work with (and help) are the ones who always try and work out how they can help you. Be more like them&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;But get really good at asking for things. Most people will give you a discount for no reason other than you asked. If you see someone important and influential, introduce yourself&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Get good at saying no to things, from people asking you for discounts to interesting projects you really don&amp;#39;t have enough time for&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Think hard about a pivot which makes good business sense but leads to a product you no longer care about&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Writing (blogging, books, journaling) is a really positive experience&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Don&amp;#39;t pay too much attention to internet comments about something you&amp;#39;ve written, there&amp;#39;s always someone who didn&amp;#39;t like one particular sentence (see point about trolls below)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;One troll can wipe out a hundred positive interactions, be ruthless in keeping them out of your communities&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you end up pitching to someone over coffee, ask to hear their pitch afterwards&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Only say you&amp;#39;re going to introduce someone or send them something if you&amp;#39;re actually going to do it. People quickly get a reputation for never following through&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Show don&amp;#39;t tell. &amp;quot;I&amp;#39;m going to build this amazing thing&amp;quot; is a LOT less interesting than &amp;quot;I&amp;#39;ve built this slightly crappy thing that actually does something&amp;quot;. EVERYONE is GOING to build something, most people never do&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Building things is awesome, don&amp;#39;t get too caught up with the whole &amp;quot;Lean Startup Landing Page&amp;quot; mindset&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Lean Startup is awesome, but it&amp;#39;s a pamphlet not a book, read the first few chapters and you&amp;#39;ll get the idea. Four steps to the epiphany is more technical and probably a better book&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Most startup advice is terrible and the good advice is usually obvious. Everyone will give different advice, trust your gut&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Except when it comes to what your customers want, then ignore your gut and trust them&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;No-one has ever used a Bitcoin ATM for practical reasons&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do back of napkin financial forecasts for every potential business model you come up with, just to see if it&amp;#39;s in the right ballpark to a couple of orders of magnitude&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It&amp;#39;s really easy to automatically dismiss everyone who starts a conversation with &amp;quot;I&amp;#39;m looking for a technical co-founder&amp;quot;. Doing this means you miss talking to some interesting people. But be upfront that you&amp;#39;re not that co-founder so no-one feels like their time is wasted&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Trying to raise money and apply to accelerators is a full time job. You&amp;#39;re probably either building or fund raising. Not both. If in doubt, choose building&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The solution to many, many problems, is not technical. That won&amp;#39;t stop people trying solve them with apps&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Facebook is the Facebook for X&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The idea you laughed at when you saw them pitch at a hackathon may well be the one that&amp;#39;s still alive and kicking long after whatever you pitched fails&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If there are people who genuinely like failing, I&amp;#39;ve never met them&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;That was not &amp;quot;your idea&amp;quot; unless you shipped something, otherwise I invented Facebook, Nest and Oculus Rift&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;People don&amp;#39;t steal ideas. Tell as many people as possible. Never ask someone to sign an NDA before hearing your idea, you&amp;#39;ll instantly lose all credibility&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Being friends with somebody is not the same as being able to work well with them&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Small teams can move VERY fast, be really careful getting extra people involved in any project where agility is important&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Multi-tasking isn&amp;#39;t a thing, switching costs are huge, do one thing at a time and do it really well. Find a way to block out interruptions&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Read every &lt;a href=&quot;http://www.paulgraham.com/articles.html&quot;&gt;essay&lt;/a&gt; Paul Graham has written&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Tech news (and news in general) has a very low return on time invested. Prefer books and conversations&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Read &lt;a href=&quot;http://www.amazon.co.uk/Founders-Work-Stories-Startups-Problem-Solution/dp/1430210788&quot;&gt;Founders Stories&lt;/a&gt;, &lt;a href=&quot;http://www.amazon.co.uk/Fooled-Randomness-Hidden-Chance-Markets-ebook/dp/B002RI9BH6/&quot;&gt;Fooled By Randomness&lt;/a&gt; and &lt;a href=&quot;http://www.amazon.co.uk/Four-Steps-Epiphany-Steve-Blank-ebook/dp/B00FLZKNUQ/&quot;&gt;The Four Steps to the Ephiphany&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The logo doesn&amp;#39;t matter at the start, find a simple text based logo you can re-use for different projects&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you possibly can, open source and write up any side project. Every now and then you&amp;#39;ll meet somebody really interesting as a result&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Regularly working 12 hour days is probably never a good idea. If this is happening a lot, find a way to optimise&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Talk to everybody&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
<summary>This is, in no particular order, what I&amp;#39;d tell myself about startups if I could go back in time to when I first got involved. Which is probably the same as what I&amp;#39;ve learned. This is most definitely not advice, the &amp;quot;you&amp;quot; here is directed at me. So is &amp;quot;I&amp;quot;. Grammar is hard.</summary>
</entry>
<entry>
<title>2014 In Review</title>
<link href="https://www.talkingquickly.co.uk/2015/02/2014-in-review/" rel="alternate" type="text/html" title="2014 In Review" />
<published>2015-02-12T08:00:00+00:00</published>
<updated>2015-02-12T08:00:00+00:00</updated>
<id>https://www.talkingquickly.co.uk/2015/02/2014-in-review</id>
<content type="html" xml:base="https://www.talkingquickly.co.uk/2015/02/2014-in-review/">&lt;p&gt;Having reached 2015 I&amp;#39;m forced to acknowledge that 2013 In Review is probably not going to happen. I might even remove it from my ToDo list where it&amp;#39;s now the oldest item after returning the copy of &amp;quot;Chaos&amp;quot; I borrowed from a public library in my first year of university, six years of fines are going to hurt. In the spirit of &lt;a href=&quot;&quot;&gt;it probably isn&amp;#39;t a big deal&lt;/a&gt; I&amp;#39;ll dive straight into 2014 but with a scattering of confusing references to 2013 for context.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2&gt;Products&lt;/h2&gt;

&lt;p&gt;One of my long term goals is to shift my income away from consulting and towards products. 2014 was the best year yet for this and hopefully 2015 will see this trend continue.&lt;/p&gt;

&lt;h3&gt;Make It With Code&lt;/h3&gt;

&lt;p&gt;In January 2014, &lt;a href=&quot;http://www.twitter.com/hrowalters&quot;&gt;Huw&lt;/a&gt;, &lt;a href=&quot;http://www.twitter.com/bec_pr&quot;&gt;Rebecca&lt;/a&gt; and I sat in a freezing cafe in Paris and talked about learning to code. In particular how it was broken. Our expertise was formidable, I&amp;#39;d learned to code, Rebecca was learning and Huw was used to trying to block out me talking about code. We were nearly experts already.&lt;/p&gt;

&lt;p&gt;Our premise was simple, good developers learned by hacking on things, not by trawling through reams of dry theory. So why was no-one teaching this way. We put pen to paper and the result was &lt;a href=&quot;/2014/01/teaching-people-to-code/&quot;&gt;this&lt;/a&gt; blog post. Our offer to write a course which taught this way was taken up by a surprisingly large number of people on Reddit and within a day we had over 60 people willing to pay for our experiment.&lt;/p&gt;

&lt;p&gt;What followed was ten weeks of madness which when squinted at carefully, reveals what turned out to be a surprisingly effective method. The first of ten lessons was finished hours before the first group started. Having been written by me and tested by Huw and Rebecca, both for content and the ratio of sarcastic jokes to informational (1:10 turns out to be the perfect balance) the lesson went out to the first group. We&amp;#39;d then begin the whole process again for the next lesson alongside improving the first one based on feedback before sending it out to the next weeks group.&lt;/p&gt;

&lt;p&gt;After ten weeks, ten lessons and countless revisions, we were exhausted but it seemed to have worked! Feedback from students was great and even more excitingly, they were sending us real things they&amp;#39;d been able to make using what they&amp;#39;d learned.&lt;/p&gt;

&lt;p&gt;Fast forward to the end of 2014 and we&amp;#39;re seeing good organic growth of our general &amp;quot;introduction to code&amp;quot; course (&lt;a href=&quot;http://www.makeitwithcode.com&quot;&gt;http://www.makeitwithcode.com&lt;/a&gt;) and just launched our first industry specific course &lt;a href=&quot;https://www.makeitwithcode.com/community-professionals&quot;&gt;coding for community professionals&lt;/a&gt; in partnership with CMX Media in San Francisco. Our tech&amp;#39;s a bit more advanced to with a completely custom platform for delivering lesson content as well as a Docker based Cloud IDE for every student.&lt;/p&gt;

&lt;p&gt;2015 will see us launch several more industry specific courses as well as experiment with in person teaching and multiple delivery platforms.&lt;/p&gt;

&lt;h3&gt;Reliably Deploying Rails Applications&lt;/h3&gt;

&lt;p&gt;Somewhere towards the end of 2013, patio11 on HN mentioned that someone should write a book about how to deploy Rails Applications without tearing your hair out. I commented that I&amp;#39;d been collating notes on that topic for a while and was thinking of releasing it as book sometime. I woke up to several emails from people saying they&amp;#39;d buy such a book and asking for copies of it. So somewhat impulsively I decided to write it.&lt;/p&gt;

&lt;p&gt;Optimistically thinking it would take around three months to write and with a goal of selling ten copies, I released the first chapter on the amazing &lt;a href=&quot;http://leanpub.com/deploying_rails_applications&quot;&gt;Leanpub&lt;/a&gt;, set a fairly low price and starting writing. 14 Months, two total re-writes and it&amp;#39;s now about 90% finished. In this period it&amp;#39;s sold around 850 copies and made a little over $15,000. The amazing Obie Fernandez, author of The Rails Way has kindly agreed to write a foreword and the &amp;#39;final&amp;#39; version should be out by April this year.&lt;/p&gt;

&lt;h3&gt;Deploying Rails with Docker&lt;/h3&gt;

&lt;p&gt;Docker is in the process of changing nearly everything about how we deploy web applications. Late in 2014 I put out a fairly weighty blog post about development environments with Docker along with a signup form to see who&amp;#39;d be interested in a book about deploying Rails with Docker. Interest has been impressive, the post is now one of my highest trafficked pages and signups to the book mailing list are around 7/ week.&lt;/p&gt;

&lt;p&gt;Unfortunately at the moment the Docker ecosystem is moving to quickly to put out a stable book on how to deploy with it. As Docker begin to develop their own orchestration and development environment tool chain, it&amp;#39;s unclear whether the industry will standardise on that or if each platform ecosystem will develop it&amp;#39;s own favourite tools. So at the moment this book is on hold while things stabilise.&lt;/p&gt;

&lt;p&gt;In the mean time I&amp;#39;ve written my own Docker Orchestration framework &lt;a href=&quot;https://github.com/talkingquickly/dacker&quot;&gt;Dacker&lt;/a&gt; which is entirely Ruby based and provides a simple way to orchestrate multiple containers across several hosts using a simple Fig like YAML syntax. Production usage is strongly discouraged...&lt;/p&gt;

&lt;p&gt;I&amp;#39;ll also be continuing to blog about Docker in 2015.&lt;/p&gt;

&lt;h3&gt;Au Revoir&lt;/h3&gt;

&lt;p&gt;2013 marked the demise of InGuide - a digital guidebook platform for art galleries and museums. High support costs and falling funding for the arts meant it simply wasn&amp;#39;t financially viable. High points included trials with The National Trust and being used by the 3 Beards for one of their amazing art hack events.&lt;/p&gt;

&lt;p&gt;2013 was also the end of Shop Of Me - a browser extension which alerted users when items of clothing they had used went on sale. The business model was re-selling the data collected to retailers to help with pricing and buying decisions. We eventually found that while data usage in the fashion industry is gradually on the up, it&amp;#39;s a slow process, and demand for data like ours wasn&amp;#39;t going to be sufficient to sustain the company. I&amp;#39;m not sure I quite go as far as Travis Lee Street&amp;#39;s Radio 4 quote that we were &amp;quot;the rockstars of the startup world&amp;quot; (because it isn&amp;#39;t true..) but we did get a visit to 10 Downing Street out of it!&lt;/p&gt;

&lt;h2&gt;Speaking and Conferences&lt;/h2&gt;

&lt;h3&gt;Speaking At Railsconf&lt;/h3&gt;

&lt;p&gt;Buoyed by the interest in the book, I submitted a talk to RailsConf aimed at beginners, entitled &amp;quot;Deploying Rails is Easier Than it Looks&amp;quot;. Euphoria followed by total panic summarises my reaction to the acceptance email. You can watch the talk below:&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/hTofBnxyBUU&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;In future I&amp;#39;d tone down the code walk through - it was too intimidating at the pace I did it - and probably do one or two less obsessive 4AM run throughs the night before. But in general it seemed well received and as my first talk at a major conference I&amp;#39;m pleased with it.&lt;/p&gt;

&lt;p&gt;The conference itself was definitely worth attending just for the number of interesting people I met. I&amp;#39;ll definitely plan to go back to this years conference whether as a speaker or an attendee.&lt;/p&gt;

&lt;h3&gt;Attending DockerCon&lt;/h3&gt;

&lt;p&gt;The first ever DockerCon was definitely a special event. It&amp;#39;s amazing to see such a young company with such an engaged and diverse following. The badge of honor at the conference seemed to be hour far before 1.0 did you put Docker into production (0.8 for the record).&lt;/p&gt;

&lt;p&gt;Seeing the likes of Google stand up to announce they&amp;#39;d be standardising on the Docker container format gave an idea of how the &amp;quot;getting people to agree standards&amp;quot; part of Docker is actually far more important than any code they&amp;#39;ve written.&lt;/p&gt;

&lt;h3&gt;Attending TC Disrupt London&lt;/h3&gt;

&lt;p&gt;Having built &lt;a href=&quot;http://www.sentimentile.com&quot;&gt;Sentimentile&lt;/a&gt; with the awesome &lt;a href=&quot;http://www.twitter.com/oldwhitewizard&quot;&gt;@OldWhiteWizard&lt;/a&gt; for the Disrupt Hackathon, we were lucky enough to win tickets to the main conference. I admit to being initially skeptical of Disrupt, TC seems to cover funding rather than tech so I was partly expecting two days of &amp;quot;who&amp;#39;s raised the biggest series A&amp;quot; posing.&lt;/p&gt;

&lt;p&gt;As it turned out I couldn&amp;#39;t have been more wrong. The most impressive speaker by far was &lt;a href=&quot;http://en.wikipedia.org/wiki/Morten_Lund_%28investor%29&quot;&gt;Morten Lund&lt;/a&gt;, primarily due to what seemed like an almost pathological lack of interest in what anyone thought of his answers. It&amp;#39;s hard to pick a favourite but if pressed I&amp;#39;d probably go with &amp;quot;I&amp;#39;m not trying to be f**king friends with everybody, I just want to work on interesting things with people I like&amp;quot;.&lt;/p&gt;

&lt;h2&gt;Health&lt;/h2&gt;

&lt;h3&gt;Energy Levels, Wellbeing and Diet&lt;/h3&gt;

&lt;p&gt;About two years after first realising that what goes into my body might effect how well it worked - revolutionary huh - I&amp;#39;m starting to get a feel for &amp;quot;what works&amp;quot; for me.&lt;/p&gt;

&lt;p&gt;In general some variation on low/ slow carb seems to give me the most consistent energy throughout the day. In particular cutting out white bread and anything with a lot of refined sugar in it.&lt;/p&gt;

&lt;p&gt;I stuck to a strict &amp;quot;no bread, no pasta etc&amp;quot; regime for a month while in Crete and as well as generally having a more consistent level of energy, lost around 1St. It did however have the major downfall that it excluded two key food groups; Fajitas and Pizza. The Fajita problem has been solved with the aid of low carb tortillas from Amazon and the pizza one by limiting it to occasions when said Pizza is free.&lt;/p&gt;

&lt;p&gt;I become more convinced every year that basic meditation and mindfulness techniques should be taught along side basic numeracy and literacy. Having had a long and meandering relationship with stress and in particular irrational anxiety, meditation, specifically breath based meditations and exercises remain one of my most effective tools for keep my head straight. I can&amp;#39;t recommend the &lt;a href=&quot;https://www.headspace.com/&quot;&gt;Headspace&lt;/a&gt; app enough to anyone thinking of giving it a go.&lt;/p&gt;

&lt;h3&gt;Exercise and Tracking&lt;/h3&gt;

&lt;p&gt;Total distance on RunKeeper was 316km of which 240km was running, 71km cycling and 3.3km skiing. Total duration for all Cardio was 28 hours and 51 minutes which seems surpringly low. For about 2/3rds of the year I had a fairly good running schedule, sticking to at least once a week and usually more. That&amp;#39;s slipped completely at the start of 2015, in true British fashion, I blame the weather.&lt;/p&gt;

&lt;p&gt;RunKeeper has proven to be a great motivator. In particular the paid version (clever) allowing me to see how each run compares to others of mine over a similar distance, e.g. &amp;quot;your 4th fastest 4 - 6km) and so-on.&lt;/p&gt;

&lt;p&gt;The Withings Smart Body Analyser (read posh scales attached to wifi) turned out to be a great purchase. It&amp;#39;s emphasised just how low friction something needs to be for me to stick to regularly tracking it. This is in stark contrast to the Withings blood pressure monitor which I&amp;#39;ve ended up returning due to persistent unreliability.&lt;/p&gt;

&lt;p&gt;While I haven&amp;#39;t stuck to it as regularly, sleep tracking with Sleep as Android has been useful. In particular it&amp;#39;s emphasised the difference to duration of deep sleep activities before sleeping make. Specifically that watching TV immediately before hand or drinking alcohol in the few hours before hand dramatically reduce the amount of deep sleep and so how well rested I feel the following day.&lt;/p&gt;

&lt;p&gt;Other things I&amp;#39;ve experimented with tracking and given up on (and why):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mood (data not actionable)&lt;/li&gt;
&lt;li&gt;Everything Eaten (too much effort to track)&lt;/li&gt;
&lt;li&gt;Balance of activities E.g. work v social v exercise. (too much effort to track)&lt;/li&gt;
&lt;li&gt;Calories Consumed (too much effort, data not actionable)&lt;/li&gt;
&lt;li&gt;Steps (data not actionable)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Travel&lt;/h2&gt;

&lt;p&gt;2014 (and the end of 2013) are my best yet for travel by a long way. But since a picture is worth a thousand words, here are what may seem like several thousand pictures.&lt;/p&gt;

&lt;h3&gt;Venice (2013)&lt;/h3&gt;

&lt;p&gt;Look for the incredibly talented charcoal only artists with a studio under a bridge somewhere. He creates the most amazing pieces using only the edge of the stick.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2014-in-review/venice3.jpg&quot; alt=&quot;Venice&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Malta (2013)&lt;/h3&gt;

&lt;p&gt;They have English power outlets, what more can you ask for?&lt;/p&gt;

&lt;h3&gt;Brussels (2013)&lt;/h3&gt;

&lt;p&gt;When you get there, don&amp;#39;t despair, Ghent is only an hour away. And the Trams are good.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2014-in-review/brussels2.jpg&quot; alt=&quot;Brussels&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Moving to Paris (2013/ 2014)&lt;/h3&gt;

&lt;p&gt;Absolutely my favourite city in the world. Dedicated post coming soon. Nothing quite beats Canal St Matin on a summers evening or the Mutinerie co-working space at pretty much any time.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2014-in-review/paris1.jpg&quot; alt=&quot;Paris&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Claviere (Skiing, 2014)&lt;/h3&gt;

&lt;p&gt;Up to date lifts but retains the &amp;quot;little resort&amp;quot; feel. And our room key turned out to be a master key, the owner responded with surprise when I mentioned it, &amp;quot;so you&amp;#39;d prefer one just for your room&amp;quot;?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2014-in-review/claviere1.jpg&quot; alt=&quot;Claviere&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Milan (2014)&lt;/h3&gt;

&lt;p&gt;A Beautiful city but everything is overshadowed by seeing Ludovicio Einaudi live. Just incredible.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2014-in-review/milan2.jpg&quot; alt=&quot;Milan&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Crete (2014)&lt;/h3&gt;

&lt;p&gt;The best place for stag do spotting outside of Prague (and it&amp;#39;s kind of beautiful).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2014-in-review/crete2.jpg&quot; alt=&quot;Crete&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Athens (2014)&lt;/h3&gt;

&lt;p&gt;Athens Backpackers Hostel. Seriously. Go. Now.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2014-in-review/athens6.jpg&quot; alt=&quot;Athens&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Chicago (2014)&lt;/h3&gt;

&lt;p&gt;I wasn&amp;#39;t sure what the whole &amp;quot;windy city&amp;quot; thing was about. Now I get it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2014-in-review/chicago1.jpg&quot; alt=&quot;Chicago&quot;&gt;&lt;/p&gt;

&lt;h3&gt;San Francisco (2014)&lt;/h3&gt;

&lt;p&gt;On day two I wandered out into a mile long hippy fest complete with bubble blowing and hemp robes. Amazing city.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2014-in-review/sf1.jpg&quot; alt=&quot;San Francisco&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Dallas (2014)&lt;/h3&gt;

&lt;p&gt;Some beautiful lighting at night and the Texas state fair was beyond an experience.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2014-in-review/dallas3.jpg&quot; alt=&quot;Dallas&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Austin (2014)&lt;/h3&gt;

&lt;p&gt;Seems to have nothing beyond geography in common with what I&amp;#39;ve seen of the rest of Texas. Beautiful city seemingly built entirely around enjoying the outdoors.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2014-in-review/austin3.jpg&quot; alt=&quot;Austin&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Boston (2014)&lt;/h3&gt;

&lt;p&gt;One of my favourite cities to date, small enough that you can walk everywhere but big enough you can find everything you want.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2014-in-review/boston1.jpg&quot; alt=&quot;Boston&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Maine (2014)&lt;/h3&gt;

&lt;p&gt;The highlands of Scotland but with much, much better weather. It also took me a mere two hours to start the below pictured fire sans paper.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2014-in-review/maine1.jpg&quot; alt=&quot;Maine&quot;&gt;&lt;/p&gt;

&lt;h3&gt;New York (2014)&lt;/h3&gt;

&lt;p&gt;I still can&amp;#39;t work out why but completely in love with this city, definitely need to live there at some point. And it&amp;#39;s not just because I had the best Chinese food I&amp;#39;ve ever encountered for $4.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2014-in-review/ny1.jpg&quot; alt=&quot;NY&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Normandy (2014)&lt;/h3&gt;

&lt;p&gt;There&amp;#39;s something bizarre but wonderful about the picturesque, quaint towns around the coast, directly next to the graveyards from the second world war.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2014-in-review/normandy4.jpg&quot; alt=&quot;Normandy&quot;&gt;&lt;/p&gt;

&lt;h2&gt;Goals For 2015&lt;/h2&gt;

&lt;p&gt;If anything 2015 will have less goals than 2014. Despite it having been a very successful year, I started off trying to do so many things that it was tough not to focus on all the things I&amp;#39;d set out to do which I didn&amp;#39;t. So for 2015 all I&amp;#39;ve got is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Meditate More&lt;/li&gt;
&lt;li&gt;Finish Reliably Deploying Rails Applications&lt;/li&gt;
&lt;li&gt;Spend more time with people&lt;/li&gt;
&lt;li&gt;Try and get 7 - 8 hours sleep per night&lt;/li&gt;
&lt;/ul&gt;
</content>
<summary>Having reached 2015 I&amp;#39;m forced to acknowledge that 2013 In Review is probably not going to happen. I might even remove it from my ToDo list where it&amp;#39;s now the oldest item after returning the copy of &amp;quot;Chaos&amp;quot; I borrowed from a public library in my first year of university, six years of fines are going to hurt. In the spirit of it probably isn&amp;#39;t a big deal I&amp;#39;ll dive straight into 2014 but with a scattering of confusing references to 2013 for context.</summary>
</entry>
<entry>
<title>DIY EKG Using Arduino and Javascript</title>
<link href="https://www.talkingquickly.co.uk/2015/01/diy-ekg-with-arduino-javascript/" rel="alternate" type="text/html" title="DIY EKG Using Arduino and Javascript" />
<published>2015-01-15T22:16:00+00:00</published>
<updated>2015-01-15T22:16:00+00:00</updated>
<id>https://www.talkingquickly.co.uk/2015/01/diy-ekg-with-arduino-javascript</id>
<content type="html" xml:base="https://www.talkingquickly.co.uk/2015/01/diy-ekg-with-arduino-javascript/">&lt;p&gt;An EKG (electrocardiogram) - also referred to as an ECG - is a recording of the electrical activity of the heart. This can be used for measuring the rate and regularity of heart beats. Using a readily available Arduino shield, an Arduino and a $10 set of electrodes, it&amp;#39;s possible to generate this waveform at home and then manipulate and plot it in realtime using Javascript.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;First the obligatory disclaimer. Nothing here is suitable for medical use. The EKG shield being used has not been certified for medical use and I have no medical training at all. Attaching electrodes to yourself could result in electric shock or seizure, continue at your own risk!&lt;/p&gt;

&lt;p&gt;Now the fun part. The parts used here are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;An Olimex EKG Shield &lt;a href=&quot;https://www.olimex.com/Products/Duino/Shields/SHIELD-EKG-EMG/&quot;&gt;https://www.olimex.com/Products/Duino/Shields/SHIELD-EKG-EMG/&lt;/a&gt; which can be ordered directly through them and is often also available on Ebay and Amazon.&lt;/li&gt;
&lt;li&gt;A set of three electrodes designed for this board &lt;a href=&quot;https://www.olimex.com/Products/Duino/Shields/SHIELD-EKG-EMG-PA/open-source-hardware&quot;&gt;https://www.olimex.com/Products/Duino/Shields/SHIELD-EKG-EMG-PA/open-source-hardware&lt;/a&gt; again, also available on Ebay and Amazon.&lt;/li&gt;
&lt;li&gt;A standard Arduino Uno &lt;a href=&quot;http://arduino.cc/en/Main/arduinoBoardUno&quot;&gt;http://arduino.cc/en/Main/arduinoBoardUno&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This was built on OSX but it uses a Google Chrome App to interface with the Arduino so should work on any platform which supports these. That should include both Linux and Windows but I haven&amp;#39;t tested the code on either.&lt;/p&gt;

&lt;p&gt;The manual for the Olimex board is excellent and &lt;a href=&quot;https://www.olimex.com/Products/Duino/Shields/SHIELD-EKG-EMG/resources/SHIELD-EKG-EMG.pdf&quot;&gt;available here&lt;/a&gt;. It covers the jumper configurations required for basic use, the configuration I used can be seen below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/diy-ekg-arduino/board-configuration.jpg&quot; alt=&quot;Jumper Configuration&quot;&gt;&lt;/p&gt;

&lt;p&gt;The Arduino sketch they provide is responsible for reading from the analogue inputs associated with the shield and then writing this data out to the Serial port. It&amp;#39;s worth noting two things about the sketch:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The serial port is set to 57600bps not the usual 9600&lt;/li&gt;
&lt;li&gt;The data is written in binary format rather than text so cannot be viewed using the standard Arduino Serial monitor&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The viewing software they provide is windows only and my end goal wasn&amp;#39;t just to stream the data, it was to automate acquiring and analysing it. This meant writing my own.&lt;/p&gt;

&lt;p&gt;My favourite tool at the moment for working with an Arduino is a &lt;a href=&quot;https://developer.chrome.com/apps/about_apps&quot;&gt;Chrome App&lt;/a&gt; these allow native-like apps to be created using standard html and javascript. These apps can do far more than a standard web page, including &lt;a href=&quot;https://developer.chrome.com/apps/serial&quot;&gt;accessing serial devices&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The source code for my simple  chrome app which reads in data from the Arduino and charts it in realtime is available here &lt;a href=&quot;https://github.com/TalkingQuickly/ekg-arduino-chrome&quot;&gt;https://github.com/TalkingQuickly/ekg-arduino-chrome&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This provides output which looks like this:&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/Jv4F7q6xR8o&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;To install the app in Chrome, clone the repository and then see the &amp;quot;Load the extension&amp;quot; section section of &lt;a href=&quot;https://developer.chrome.com/extensions/getstarted&quot;&gt;this page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Next install the sketch available here &lt;a href=&quot;https://github.com/TalkingQuickly/ekg-arduino-chrome-sketches&quot;&gt;https://github.com/TalkingQuickly/ekg-arduino-chrome-sketches&lt;/a&gt; to the Arduino.&lt;/p&gt;

&lt;p&gt;The Arduino sketch sends packets of data as a stream of bytes in the following format:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;{
  uint8_t sync0;    // = 0xa5
  uint8_t sync1;    // = 0x5a
  uint8_t version;  // = 2 (packet version)
  uint8_t count;    // packet counter. Increases by 1 each packet.
  uint16_t  data[6];  // 10-bit sample (= 0 - 1023) in big endian (Motorola) format.
  uint8_t switches; // State of PD5 to PD2, in bits 3 to 0.
};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This means 17 bytes in total, with the first two being 165,90 and the last being a 1. The Chrome App is responsible for breaking the incoming stream of bytes into valid packets.&lt;/p&gt;

&lt;p&gt;Each of the analogue readings within a packet are stored as unsigned 16bit integers meaning they need to be reconstructed from the pairs of bytes received.&lt;/p&gt;

&lt;p&gt;This function (found on &lt;a href=&quot;http://stackoverflow.com/questions/8482309/converting-javascript-integer-to-byte-array-and-back&quot;&gt;Stack Overflow&lt;/a&gt; can be used to do this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;byteArrayToLong = function(/*byte[]*/byteArray) {
    var value = 0;
    for ( var i = byteArray.length - 1; i &amp;gt;= 0; i--) {
        value = (value * 256) + byteArray[i];
    }

    return value;
};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can see from the comments in the Arduino sketch that these are sent in the form high byte, low byte:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;TXBuf[4] = 0x02;    //CH1 High Byte
TXBuf[5] = 0x00;    //CH1 Low Byte
TXBuf[6] = 0x02;    //CH2 High Byte
TXBuf[7] = 0x00;    //CH2 Low Byte
TXBuf[8] = 0x02;    //CH3 High Byte
TXBuf[9] = 0x00;    //CH3 Low Byte
TXBuf[10] = 0x02;   //CH4 High Byte
TXBuf[11] = 0x00;   //CH4 Low Byte
TXBuf[12] = 0x02;   //CH5 High Byte
TXBuf[13] = 0x00;   //CH5 Low Byte
TXBuf[14] = 0x02;   //CH6 High Byte
TXBuf[15] = 0x00;   //CH6 Low Byte
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Therefore to get the first channel we can simply call &lt;code&gt;byteArrayToLong([TXBuf[5], TXBuff[4]])&lt;/code&gt;, e.g. with the low byte first.&lt;/p&gt;

&lt;p&gt;The app then uses &lt;a href=&quot;http://canvasjs.com/&quot;&gt;CanvasJS&lt;/a&gt; to chart the data in realtime. At the moment only one channel is displayed.&lt;/p&gt;

&lt;p&gt;Arguably the hardest part of this project was getting adequate contact between the electrodes and the skin. Another warning, connecting electrodes to yourself has the potential to result in electric shock or seizures, continue at your own risk.&lt;/p&gt;

&lt;p&gt;The configuration which I&amp;#39;ve had the most success with is the L and R electrodes on the inside of my left and right wrists and the the D electrode on my ankle. I&amp;#39;ve found it&amp;#39;s very important that the ones on the wrist are tight and that a small layer of shower gel helps to maintain a constant connection.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/diy-ekg-arduino/complete.jpg&quot; alt=&quot;Complete Setup&quot;&gt;&lt;/p&gt;

&lt;p&gt;Next steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Automatic peak detection&lt;/li&gt;
&lt;li&gt;Heart Rate Calculation&lt;/li&gt;
&lt;li&gt;Heart Rate Variability Calculation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This presentation &lt;a href=&quot;http://www.slhn.org/docs/pdf/prehosp-drkasarda1.pdf&quot;&gt;http://www.slhn.org/docs/pdf/prehosp-drkasarda1.pdf&lt;/a&gt; is useful for getting a feel for roughly how an EKG works and what each part of the waveform represents.&lt;/p&gt;
</content>
<summary>An EKG (electrocardiogram) - also referred to as an ECG - is a recording of the electrical activity of the heart. This can be used for measuring the rate and regularity of heart beats. Using a readily available Arduino shield, an Arduino and a $10 set of electrodes, it&amp;#39;s possible to generate this waveform at home and then manipulate and plot it in realtime using Javascript.</summary>
</entry>
<entry>
<title>Google Cardboard Unity Tutorial</title>
<link href="https://www.talkingquickly.co.uk/2014/11/google-cardboard-unity-tutorial/" rel="alternate" type="text/html" title="Google Cardboard Unity Tutorial" />
<published>2014-11-09T19:36:00+00:00</published>
<updated>2014-11-09T19:36:00+00:00</updated>
<id>https://www.talkingquickly.co.uk/2014/11/google-cardboard-unity-tutorial</id>
<content type="html" xml:base="https://www.talkingquickly.co.uk/2014/11/google-cardboard-unity-tutorial/">&lt;p&gt;Having tried the Oculus I&amp;#39;d prepared myself to be completely unimpressed by Google&amp;#39;s $2 VR solution. But after trying Roller Coaster VR I was blown away by how well the slightly shabby looking cardboard assembly performed. Naturally despite never have tried any game development or 3D modeling, I wanted to make stuff for it. Using Unity and some plugins, this turned out to be surprisingly easy. This tutorial covers the bare minimum needed to go from never having used Unity before, to a simple 3D environment you can look around using Google Cardboard.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2&gt;Prerequisites&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Latest version of Unity (&lt;a href=&quot;http://unity3d.com/unity/download&quot;&gt;http://unity3d.com/unity/download&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Google Cardboard (&lt;a href=&quot;https://cardboard.withgoogle.com/&quot;&gt;https://cardboard.withgoogle.com/&lt;/a&gt;) I got mine from Amazon, there are manufacturers springing up all over the world&lt;/li&gt;
&lt;li&gt;The Android SDK (&lt;a href=&quot;https://developer.android.com/sdk/index.html?hl=i&quot;&gt;https://developer.android.com/sdk/index.html?hl=i&lt;/a&gt;). This assumes you want to build and run on the Android platform. This tutorial will work with iOS but the build process at the end will be different.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Get Setup with Unity&lt;/h2&gt;

&lt;p&gt;The first step has nothing to do with Google Cardboard, we just need to get a simple 3D environment created within Unity with a character who can move around and interact with it.&lt;/p&gt;

&lt;p&gt;No point in re-inventing the wheel here, this excellent tutorial gets you up and running with such an environment in about 12 minutes: &lt;a href=&quot;https://www.youtube.com/watch?v=fRED_-LvJKQ&amp;list=PLPV2KyIb3jR7F_B4p8X3YwHPaExh0R9Kk&quot;&gt;https://www.youtube.com/watch?v=fRED_-LvJKQ&amp;amp;list=PLPV2KyIb3jR7F_B4p8X3YwHPaExh0R9Kk&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;That entire series of tutorials is a really accessible introduction to Unity so I&amp;#39;d recommend coming back to the remaining ones later on. Each one is recorded as a single take so sometimes the author makes mistakes he goes back and fixes later on. I made the mistake several times of pausing the video when I saw an error and spending ages trying to fix it myself, only to find out that he explains how to resolve it immediately afterwards.&lt;/p&gt;

&lt;p&gt;Once you&amp;#39;ve completed that tutorial, continue below to add Google Cardboard integration.&lt;/p&gt;

&lt;h2&gt;One Camera for Each Eye&lt;/h2&gt;

&lt;p&gt;At the moment our game window looks something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/unity_cardboard_tutorial/single_camera.png&quot; alt=&quot;Single Camera&quot;&gt;&lt;/p&gt;

&lt;p&gt;We have a single camera, some simple 3D shapes and a point light source. The camera is attached to the player which can be moved around with the arrow keys.&lt;/p&gt;

&lt;p&gt;For this to work with Google cardboard, we need to add a second camera, so we have one for each eye and set these up to be offset from the center of the viewport by equal amounts.&lt;/p&gt;

&lt;p&gt;Begin by renaming the existing camera (mine was called &amp;quot;MainCamera&amp;quot;) to &amp;quot;LeftCamera&amp;quot; and then in the inspector, changing the following values:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Position X : -1&lt;/li&gt;
&lt;li&gt;Field of View : 60&lt;/li&gt;
&lt;li&gt;Viewport Rect W : 0.5&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This should give you a game screen similar to before but filling only half of the viewport:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/unity_cardboard_tutorial/half_viewport.png&quot; alt=&quot;Half Viewport Camera&quot;&gt;&lt;/p&gt;

&lt;p&gt;Now right click on &amp;quot;LeftCamera&amp;quot; in the Hierarchy and choose Duplicate. Rename the newly duplicated &amp;quot;LeftCamera&amp;quot; to &amp;quot;RightCamera&amp;quot;.&lt;/p&gt;

&lt;p&gt;Then in the inspector for RightCamera, change the following values:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Position X : 1&lt;/li&gt;
&lt;li&gt;Viewport Rect X : 0.5&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This should give you a viewport which is split down the middle, with one camera for each eye:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/unity_cardboard_tutorial/two_cameras.png&quot; alt=&quot;Two Cameras&quot;&gt;&lt;/p&gt;

&lt;p&gt;If you were to load this onto a device now and look at it through Cardboard, it would work. But you wouldn&amp;#39;t be able to look around so it wouldn&amp;#39;t be that interesting.&lt;/p&gt;

&lt;h2&gt;Adding Head Tracking&lt;/h2&gt;

&lt;p&gt;One of the biggest challenges with Google Cardboard is that the only forms of user input are head movement and a magnet based switch on the side. The most impressive is the head tracking which uses the Gyroscope to detect exactly where the user is looking.&lt;/p&gt;

&lt;p&gt;This would be quite challenging to implement smoothly from scratch but luckily the clever folk at Durovis have created a Unity plugin which will take care of it for us.&lt;/p&gt;

&lt;p&gt;Begin by downloading the plugin from &lt;a href=&quot;https://www.durovis.com/sdk.html&quot;&gt;https://www.durovis.com/sdk.html&lt;/a&gt; and double clicking on the &lt;code&gt;.unitypackage&lt;/code&gt; file once it&amp;#39;s finished downloading. This should automatically open the Unity import dialog.&lt;/p&gt;

&lt;p&gt;Don&amp;#39;t change any options on the import window and just click &amp;quot;Import&amp;quot;. You may see an error about not having Blender installed at this point, for now this can be ignored.&lt;/p&gt;

&lt;p&gt;Now select the &amp;quot;Player&amp;quot; in the Hierarchy (the parent object to your two cameras) and in the Inspector click &amp;quot;Add Component&amp;quot; at the bottom.&lt;/p&gt;

&lt;p&gt;Select &amp;quot;Scripts&amp;quot; and then &amp;quot;Open Dive Sensor&amp;quot;. You&amp;#39;ll then see a pane for configuring the Open Dive Sensor.&lt;/p&gt;

&lt;p&gt;There are two attributes which need setting here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cameraleft&lt;/li&gt;
&lt;li&gt;Cameraright&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Which are shown below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/unity_cardboard_tutorial/open_dive_before_adding_cameras.png&quot; alt=&quot;Configuring Open Dive Sensor&quot;&gt;&lt;/p&gt;

&lt;p&gt;Click the button to the far right of Cameraleft (see the arrow in the screenshot above) and in the dialog which comes up choose &amp;quot;LeftCamera&amp;quot; by double clicking on it. Repeat the process for Cameraright, choosing &amp;quot;RightCamera&amp;quot; in the dialog.&lt;/p&gt;

&lt;p&gt;If you select play now and look at the game window, notice that there is distortion added to correct for the lenses in Google Cardboard:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/unity_cardboard_tutorial/with_open_dive_distortion.png&quot; alt=&quot;Configuring Open Dive Sensor&quot;&gt;&lt;/p&gt;

&lt;h2&gt;Trying it out&lt;/h2&gt;

&lt;p&gt;We&amp;#39;re now ready to test the scene with Cardboard.&lt;/p&gt;

&lt;p&gt;Begin by selecting &amp;quot;File&amp;quot; and then &amp;quot;Build Settings&amp;quot;. Add our current Scene to the Build by clicking the &amp;quot;Add Current&amp;quot; button (middle right).&lt;/p&gt;

&lt;p&gt;Under Platform select &amp;quot;Android&amp;quot;. Make sure your Android device is plugged into the computer using a USB cable and that USB Debugging is enabled (this varies between Android devices but a quick Google Search should do the trick).&lt;/p&gt;

&lt;p&gt;Having selected Android, click on &amp;quot;Player Settings&amp;quot; which will load the settings in the Inspector window. Under &amp;quot;Other&amp;quot; you&amp;#39;ll need to enter a bundle identifier:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/unity_cardboard_tutorial/android_bundle_identifier.png&quot; alt=&quot;Adding a bundle identifier&quot;&gt;&lt;/p&gt;

&lt;p&gt;Now choose &amp;quot;Build and Run&amp;quot; and wait for the build process to complete. When asked for a file location initially, choose somewhere to store the generated APK (Android Installer). This file can be copied to you device for installing manually or sent to friends.&lt;/p&gt;

&lt;p&gt;At some point it will also ask you for the location of the Android SDK. Because everyone read the &amp;quot;prerequisites&amp;quot; section of this post, this will already been downloaded and extracted somewhere (or not!).&lt;/p&gt;

&lt;p&gt;I&amp;#39;d downloaded and extracted this in my &lt;code&gt;~/Downloads&lt;/code&gt; folder so the SDK was located in &lt;code&gt;~/Downloads/adt-bundle-mac-x86_64-20140702/sdk&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Once the process completes, the application should automatically launch on your device. Slot it into Google Cardboard and look around!&lt;/p&gt;

&lt;p&gt;The next big challenge is finding a way to get user input. The magnetic button is clever but hardly that useful for fine grained directional control and expecting people to have a gamepad available is unreasonable.&lt;/p&gt;

&lt;p&gt;My current thinking is to allow a computers arrow keys to be used as input via web sockets, or eventually hand gestures recognised by the camera.&lt;/p&gt;

&lt;p&gt;Any questions or comments, find me on twitter, &lt;a href=&quot;http://www.twitter.com/talkingquickly&quot;&gt;http://www.twitter.com/talkingquickly&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;References&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.sc0ttgames.com/?p=293&quot;&gt;http://www.sc0ttgames.com/?p=293&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=fRED_-LvJKQ&amp;list=PLPV2KyIb3jR7F_B4p8X3YwHPaExh0R9Kk&quot;&gt;https://www.youtube.com/watch?v=fRED_-LvJKQ&amp;amp;list=PLPV2KyIb3jR7F_B4p8X3YwHPaExh0R9Kk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.durovis.com/board/viewforum.php?f=1&amp;sid=a3e36bc84f5e3e70f7bb00c9b11af7a2&quot;&gt;https://www.durovis.com/board/viewforum.php?f=1&amp;amp;sid=a3e36bc84f5e3e70f7bb00c9b11af7a2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://forum.unity3d.com/threads/cardboard-vr-by-google-for-android-only-45.253903/&quot;&gt;http://forum.unity3d.com/threads/cardboard-vr-by-google-for-android-only-45.253903/&lt;/a&gt;&lt;/p&gt;
</content>
<summary>Having tried the Oculus I&amp;#39;d prepared myself to be completely unimpressed by Google&amp;#39;s $2 VR solution. But after trying Roller Coaster VR I was blown away by how well the slightly shabby looking cardboard assembly performed. Naturally despite never have tried any game development or 3D modeling, I wanted to make stuff for it. Using Unity and some plugins, this turned out to be surprisingly easy. This tutorial covers the bare minimum needed to go from never having used Unity before, to a simple 3D environment you can look around using Google Cardboard.</summary>
</entry>
<entry>
<title>Automatically Generate Vagrant Machines from Chef Node Definitions</title>
<link href="https://www.talkingquickly.co.uk/2014/08/auto-generate-vagrant-machines-from-chef-node-definitions/" rel="alternate" type="text/html" title="Automatically Generate Vagrant Machines from Chef Node Definitions" />
<published>2014-08-09T08:00:00+00:00</published>
<updated>2014-08-09T08:00:00+00:00</updated>
<id>https://www.talkingquickly.co.uk/2014/08/auto-generate-vagrant-machines-from-chef-node-definitions</id>
<content type="html" xml:base="https://www.talkingquickly.co.uk/2014/08/auto-generate-vagrant-machines-from-chef-node-definitions/">&lt;p&gt;If you use chef-solo to provision your production servers, Vagrant makes it easy to set up a production- like environment on a local VM for testing purposes. It can however seem like wasted time to have to manually replicate the contents of your node definition in your &lt;code&gt;Vagrantfile&lt;/code&gt; and more importantly it&amp;#39;s easy to make a change to either the &lt;code&gt;Vagrantfile&lt;/code&gt; or the node definition and forget to update the other to match. In this post I&amp;#39;ll look at a simple method of automatically generating Vagrant machines based on node definitions.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;This post will use as an example the sample configuration from the book &lt;a href=&quot;https://leanpub.com/deploying_rails_applications&quot;&gt;Reliably Deploying Rails applications&lt;/a&gt; but it should be applicable to any project which uses a standard Chef Solo configuration.&lt;/p&gt;

&lt;p&gt;The high level approach is simple, for any node we want a Vagrant machine for, we add a &lt;code&gt;vagrant&lt;/code&gt; section to the definition json which defines some vagrant specific options, in particular the IP if we want to use private networking, the name to use and any items we should exclude from the run_list. In our &lt;code&gt;Vagrantfile&lt;/code&gt; we then look for any &lt;code&gt;.json&lt;/code&gt; files in the &lt;code&gt;nodes&lt;/code&gt; directory, parse the JSON and if it contains a &lt;code&gt;vagrant&lt;/code&gt; key, generate a Vagrant configuration on the fly.&lt;/p&gt;

&lt;p&gt;The Vagrant section of our node definition looks like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&amp;quot;vagrant&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;exclusions&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;ip&amp;quot;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:&amp;quot;192.168.1.50&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;rails-pg-test-1&amp;quot;&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;only&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For a complete example node definition see: &lt;a href=&quot;https://github.com/TalkingQuickly/rails-server-template/blob/master/nodes/rails_postgres_redis.json.example&quot;&gt;https://github.com/TalkingQuickly/rails-server-template/blob/master/nodes/rails_postgres_redis.json.example&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And our Vagrantfile looks like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Vagrantfile API/syntax version. Don&amp;#39;t touch unless you know what you&amp;#39;re doing!&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;VAGRANTFILE_API_VERSION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Vagrant&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;configure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;VAGRANTFILE_API_VERSION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Setup resource requirements&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;provider&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;virtualbox&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cpus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;box&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;ubuntu/trusty64&amp;quot;&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# This should match the version specified in your&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Gemfile. You must have the omnibus vagrant plugin&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# installed for this to work.&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;omnibus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chef_version&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;11.16.0&amp;quot;&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Enable if you want to use the Vagrant Berkshelf plugin to manage&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Cookbooks.&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;berkshelf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;enabled&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Assumes that the Vagrantfile is in the root of our&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Chef repository.&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;root_dir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expand_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;__FILE__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Assumes that the node definitions are in the nodes&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# subfolder&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;nodes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Dir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root_dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;nodes&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;*.json&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Iterate over each of the JSON files&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;nodes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;node_json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# Only process the node if it has a vagrant section&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node_json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;vagrant&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;vagrant_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node_json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;vagrant&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;vagrant_ip&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node_json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;vagrant&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ip&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

      &lt;span class=&quot;c1&quot;&gt;# Allow us to remove certain items from the run_list if we&amp;#39;re&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# using vagrant. Useful for things like networking configuration&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# which may not apply/ may break in the vagrant environment&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exclusions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node_json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;vagrant&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;exclusions&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;exclusions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exclusion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node_json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;run_list&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exclusion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;removed &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exclusion&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; from the run list&amp;quot;&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vagrant_name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vagrant&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;vagrant&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hostname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vagrant_name&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# Only use private networking if we specified an&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# IP. Otherwise fallback to DHCP&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vagrant_ip&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;vagrant&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;network&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:private_network&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vagrant_ip&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;vagrant&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;provision&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;chef_solo&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chef&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;

          &lt;span class=&quot;c1&quot;&gt;# Use berks-cookbooks not cookbooks and remember&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;# to explicitly vendor berkshelf cookbooks with&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;# berks vendor if not using the berkshelf vagrant plugin&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;chef&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cookbooks_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;berks-cookbooks&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;site-cookbooks&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;chef&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_bags_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;data_bags&amp;quot;&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;chef&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;roles_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;roles&amp;quot;&lt;/span&gt;

          &lt;span class=&quot;c1&quot;&gt;# Instead of using add_recipe and add_role, just&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;# assign the node definition json, this will take&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;# care of populating the run_list.&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;chef&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node_json&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For a complete example &lt;code&gt;Vagrantfile&lt;/code&gt; see &lt;a href=&quot;https://github.com/TalkingQuickly/rails-server-template/blob/master/Vagrantfile&quot;&gt;https://github.com/TalkingQuickly/rails-server-template/blob/master/Vagrantfile&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Using with Berkshelf&lt;/h2&gt;

&lt;p&gt;If you&amp;#39;re using Berkshelf, it may be tempting to simply use the &lt;code&gt;cookbooks&lt;/code&gt; directory as &lt;code&gt;chef.cookbooks_path&lt;/code&gt;. The problem with this however is that the &lt;code&gt;cookbooks&lt;/code&gt; directory is only populated when we run &lt;code&gt;knife solo cook&lt;/code&gt; so there&amp;#39;s no guarantee that &lt;code&gt;cookbooks&lt;/code&gt; always contains the correct versions, just the correct versions from when we last ran a cook.&lt;/p&gt;

&lt;p&gt;If we take the following workflow:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Run a cook&lt;/li&gt;
&lt;li&gt;Update or add a dependency in our &lt;code&gt;Berksfile&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;berks install&lt;/code&gt; or &lt;code&gt;berks update&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At the end of this process, &lt;code&gt;cookbooks&lt;/code&gt; will not contain the new or updated cookbook, it will still contain the previous version.&lt;/p&gt;

&lt;p&gt;It is therefore safer to have Vagrant use the &lt;code&gt;berks-cookbooks&lt;/code&gt; directory and then delete this directory and run &lt;code&gt;berks vendor&lt;/code&gt; whenever we want to work with Vagrant. This is generally my preferred approach.&lt;/p&gt;

&lt;p&gt;The other option is to use the &lt;code&gt;vagrant-berkshelf&lt;/code&gt; plugin to automate inclusion of Berkshelf provided cookbooks in the &lt;code&gt;cookbooks_path&lt;/code&gt;. To do this, first install the plugin:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;vagrant plugin install vagrant-berkshelf --plugin-version &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;.0.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then add:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;berkshelf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;enabled&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To your Vagrantfile. The key limitation is that it states on the projects web page that it doesn&amp;#39;t currently support multi machine vagrant files which is usually what we&amp;#39;ll be generating with this approach.&lt;/p&gt;

&lt;h2&gt;Directory Structure&lt;/h2&gt;

&lt;p&gt;This assumes that the &lt;code&gt;Vagrantfile&lt;/code&gt; is in the root of a chef-solo repository. In some situations the chef repository will actually be in a subfolder, for a example if your chef repository is a subfolder (&lt;code&gt;chef&lt;/code&gt;) in a Rails application and the Vagrantfile sits in the root of the Rails project.&lt;/p&gt;

&lt;p&gt;If this is the case, simply modify the line which loads the nodes from:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nodes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Dir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root_dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;nodes&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;*.json&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nodes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Dir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root_dir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;chef&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;nodes&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;*.json&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and update the &lt;code&gt;chef.*_path&lt;/code&gt; entries to be prefixed with &lt;code&gt;chef/&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;Exclusions&lt;/h2&gt;

&lt;p&gt;While the purpose of using Vagrant and Chef is often to allow us to create testing environments which closely match our production environment, there are sometimes scenario where we need to subtly vary the configuration between our production VM&amp;#39;s and our vagrant configurations.&lt;/p&gt;

&lt;p&gt;A good example of this might be networking. When working with Linode I use a custom cookbook and role which sets up a private IP address for the node. If this cookbook is applied to a Vagrant machine, it will tend to break networking completely. I don&amp;#39;t however want to modify my node definition for use with Vagrant because this defeats the purpose of auto generating it to begin with.&lt;/p&gt;

&lt;p&gt;In the example Vagrantfile this is handled by an additional attribute in the node definitions &lt;code&gt;vagrant&lt;/code&gt; section called &lt;code&gt;exclusions&lt;/code&gt;. This accepts an array of strings which should be removed from the &lt;code&gt;run_list&lt;/code&gt; attribute before assigning the JSON to &lt;code&gt;chef.json&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This is handled by the following section of the &lt;code&gt;Vagrantfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Allow us to remove certain items from the run_list if we&amp;#39;re&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# using vagrant. Useful for things like networking configuration&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# which may not apply.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exclusions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node_json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;vagrant&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;exclusions&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;exclusions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exclusion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node_json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;run_list&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exclusion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;removed &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exclusion&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; from the run list&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So if we were to take a node with the following run list:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;run_list&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;role[ruby-box]&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;role[nginx-server]&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;role[linode-with-private-networking]&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;role[mongo-server]&amp;quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And the following &lt;code&gt;vagrant&lt;/code&gt; section:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;vagrant&amp;quot;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;exclusions&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;role[linode-with-private-networking]&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This would result in the Vagrant provisioner seeing the following run list:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;run_list&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;role[ruby-box]&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;role[nginx-server]&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;role[mongo-server]&amp;quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Both roles and recipes can be removed in this mannger.&lt;/p&gt;

&lt;h2&gt;Starting the Vagrant Box(es)&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Make sure you have the vagrant omnibus plugin (&lt;a href=&quot;https://github.com/schisamo/vagrant-omnibus&quot;&gt;https://github.com/schisamo/vagrant-omnibus&lt;/a&gt;) installed which allows you to specify the chef version which is used. To install it simply enter &lt;code&gt;vagrant plugin install vagrant-omnibus&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Make sure you&amp;#39;ve got at least one node definition with the &lt;code&gt;vagrant&lt;/code&gt; section specified above&lt;/li&gt;
&lt;li&gt;If you&amp;#39;re not using the &lt;code&gt;vagrant-berkshelf&lt;/code&gt; plugin then run&lt;code&gt;bundle exec berks vendor&lt;/code&gt;. If you&amp;#39;ve run this before you&amp;#39;ll need to remove the &lt;code&gt;berks-cookbooks&lt;/code&gt; directory first&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;vagrant up&lt;/code&gt; to start and provision all nodes which have the vagrant section, or &lt;code&gt;vagrant up NAME&lt;/code&gt; where NAME is the name from the vagrant section of the node defintion to start a single node&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This will setup the VM and automatically run chef solo to provision it as per the node definition. Once this completes, you can then access the node as you would any other remote machine using the IP address specified in the &lt;code&gt;vagrant&lt;/code&gt; section of the node definition.&lt;/p&gt;

&lt;h2&gt;Users and SSH&lt;/h2&gt;

&lt;p&gt;A common issue when working with chef and vagrant is that it&amp;#39;s normal for chef scripts to modify both users and who has access to sudo. If this means that the vagrant user is removed or removed from the sudoers group, this can mean that commands such as &lt;code&gt;vagrant ssh&lt;/code&gt;, &lt;code&gt;vagrant halt&lt;/code&gt; etc will stop working. More importantly if the vagrant user doesn&amp;#39;t behave as expected, shared folders will generally not work correctly.&lt;/p&gt;

&lt;p&gt;One solution to this is to ensure that if you are explicitly setting who has access to sudo, the vagrant user is included. So for example in the Rails server template, this section:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;authorization&amp;quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;sudo&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;users&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;deploy&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;would be replaced with:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;authorization&amp;quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;sudo&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;users&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;deploy&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;vagrant&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The vagrant user also by default has passwordless sudo enabled, behavior seems to be unpredictable if this is disabled but sometimes it will simply prompt you for the vagrant users password which is &lt;code&gt;vagrant&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;Tips&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Node names must be made up of the characters a-z, 0-9, hyphens and dots only. This allows the hostname to be set to the node name&lt;/li&gt;
&lt;li&gt;You can force provisioning to run again by stopping the VM (&lt;code&gt;vagrant halt&lt;/code&gt; or &lt;code&gt;vagrant halt NAME&lt;/code&gt;) and then running &lt;code&gt;vagrant up&lt;/code&gt; or &lt;code&gt;vagrant up NAME&lt;/code&gt; with the &lt;code&gt;--provision&lt;/code&gt; option&lt;/li&gt;
&lt;/ul&gt;
</content>
<summary>If you use chef-solo to provision your production servers, Vagrant makes it easy to set up a production- like environment on a local VM for testing purposes. It can however seem like wasted time to have to manually replicate the contents of your node definition in your Vagrantfile and more importantly it&amp;#39;s easy to make a change to either the Vagrantfile or the node definition and forget to update the other to match. In this post I&amp;#39;ll look at a simple method of automatically generating Vagrant machines based on node definitions.</summary>
</entry>
<entry>
<title>A Rails Development Environment with Docker and Vagrant</title>
<link href="https://www.talkingquickly.co.uk/2014/06/rails-development-environment-with-vagrant-and-docker/" rel="alternate" type="text/html" title="A Rails Development Environment with Docker and Vagrant" />
<published>2014-06-03T08:00:00+00:00</published>
<updated>2014-06-03T08:00:00+00:00</updated>
<id>https://www.talkingquickly.co.uk/2014/06/rails-development-environment-with-vagrant-and-docker</id>
<content type="html" xml:base="https://www.talkingquickly.co.uk/2014/06/rails-development-environment-with-vagrant-and-docker/">&lt;p&gt;Onboarding new developers to a Rails projects is still a far harder task than it should be. A big part of this is that setting up a development environment for an app or suite of apps, getting the correct ruby versions, database versions etc running locally, can in many cases take upwards of a day. A combination of Vagrant and Docker can make this a thing of the past.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Update April 2018 - Docker has evolved a lot since this post, &lt;a href=&quot;/2018/03/rails-development-environment-with-docker-compose/&quot;&gt;an updated approach is documented here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vagrant alone has already gone a long way to alleviating this but with Docker we can go one step further. Not only can we have a fully functional development environment (for both new and existing devs) up in a matter of a minutes, we can use almost the same containers we create in development to deploy to production. This goes even further to avoiding the classic &amp;quot;it worked in dev&amp;quot; problem.&lt;/p&gt;

&lt;p&gt;In this tutorial, I&amp;#39;ll show you how to use a combination of Vagrant and Docker to setup a fully functional Rails + Postgres + Redis development environment. In a follow up tutorial I&amp;#39;ll demonstrate how to deploy the containers we create here to production.&lt;/p&gt;

&lt;h1&gt;Vagrant Docker Provider&lt;/h1&gt;

&lt;p&gt;Vagrant 1.6 added native support for Docker as a provider. If you&amp;#39;re developing on a Linux machine, it will run Docker natively, otherwise it will transparently spin up a virtual machine to use as the Docker host.&lt;/p&gt;

&lt;p&gt;I won&amp;#39;t be using the providers DSL in this tutorial. This is for two reasons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Later, when designing a production Docker configuration, it&amp;#39;s really important to understand the Docker options and command line switches. The Vagrant provider abstracts this into a DSL which, while Ruby friendly, is no simpler than Docker&amp;#39;s own command line switches&lt;/li&gt;
&lt;li&gt;By simply using Vagrant to setup an Ubuntu VM which matches our eventual production VM, we can be sure that the development configuration is as close to identical to the production configuration as possible&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here, therefore, Vagrant is used to setup a standard Ubuntu VM and install Docker, while everything else is done using standard Docker shell commands.&lt;/p&gt;

&lt;h1&gt;The End Result&lt;/h1&gt;

&lt;p&gt;The final system will require a simple&lt;/p&gt;

&lt;p&gt;&lt;code&gt;vagrant up&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;to setup a complete Docker-based development environment. This development environment will consist of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A VirtualMachine running Ubuntu with Docker installed&lt;/li&gt;
&lt;li&gt;Separate Docker containers for the Rails application, PostgreSQL and Redis&lt;/li&gt;
&lt;li&gt;A shared folder linked to the Docker container so you can carry on editing Rails code on your development machine as you do now, and see those changes instantly reflected on &lt;code&gt;http://localhost:3000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;A simple interface for running all the normal Rails commands (&lt;code&gt;rake db: migrate&lt;/code&gt;, &lt;code&gt;rails c&lt;/code&gt; etc) in the Docker environment&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Steps&lt;/h1&gt;

&lt;h2&gt;Pre-requisites&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Vagrant 1.6+ &lt;a href=&quot;https://www.vagrantup.com/downloads.html&quot;&gt;https://www.vagrantup.com/downloads.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Virtualbox 4.3.10+ &lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot;&gt;https://www.virtualbox.org/wiki/Downloads&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I&amp;#39;m assuming a basic understanding of what Docker is. If this is the first you&amp;#39;ve heard of Docker, they have a great interactive tutorial of the basics on their website &lt;a href=&quot;https://www.docker.io/gettingstarted/&quot;&gt;https://www.docker.io/gettingstarted/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve tested this tutorial on OSX and Ubuntu 12.04. It should work on other nix flavours, but it may require more tweaking for use on Windows.&lt;/p&gt;

&lt;h2&gt;Dockerising the App&lt;/h2&gt;

&lt;h3&gt;Configuration&lt;/h3&gt;

&lt;p&gt;I started with a standard Rails 4.1.0 application generated with &lt;code&gt;rails new&lt;/code&gt; then added a single model + scaffolding and converted it to use PostgreSQL. The final source for this is available at &lt;a href=&quot;https://github.com/TalkingQuickly/docker_rails_dev_env_example&quot;&gt;https://github.com/TalkingQuickly/docker_rails_dev_env_example&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Rails app stores all secret values (API keys, anything in &lt;code&gt;secrets.yml&lt;/code&gt; etc) in environment variables and uses the dotenv gem for loading these in development. Note that in the example application, the &lt;code&gt;.env&lt;/code&gt; file is included in version control, for any real application, particularly one in a public repository, this should be added to &lt;code&gt;.gitignore&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The PostgreSQL access details will be inferred directly from the database container. For more on this, see the section &amp;quot;Environment Variables in Linked Containers&amp;quot; later in this tutorial. In the example application, &lt;code&gt;database.yml&lt;/code&gt; looks like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;&amp;amp;default&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;adapter&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;postgresql&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;5&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;5000&lt;/span&gt;

&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;development&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;*default&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;unicode&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;dpa_development&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;5&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;&amp;lt;%= ENV[&amp;#39;DB_ENV_POSTGRESQL_USER&amp;#39;] %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;&amp;lt;%= ENV[&amp;#39;DB_ENV_POSTGRESQL_PASS&amp;#39;] %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;&amp;lt;%= ENV[&amp;#39;DB_PORT_5432_TCP_ADDR&amp;#39;] %&amp;gt;&lt;/span&gt;

&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;*default&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;unicode&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;dpa_test&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;5&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;&amp;lt;%= ENV[&amp;#39;DB_ENV_POSTGRESQL_USER&amp;#39;] %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;&amp;lt;%= ENV[&amp;#39;DB_ENV_POSTGRESQL_PASS&amp;#39;] %&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;&amp;lt;%= ENV[&amp;#39;DB_PORT_5432_TCP_ADDR&amp;#39;] %&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Dockerfiles and Scripts&lt;/h3&gt;

&lt;p&gt;The example configuration requires three Dockerfiles: one for Rails, one for Redis and one for PostgreSQL. The Rails Dockerfile is stored in the root of the Rails project, the others are stored in sub-folders of the &lt;code&gt;docker/&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;Templates for all of these files are available here: &lt;a href=&quot;https://github.com/TalkingQuickly/docker_rails_dev_env&quot;&gt;https://github.com/TalkingQuickly/docker_rails_dev_env&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To begin with, copy all of the files and folders from the above repository into the root of your Rails project. If you&amp;#39;re adding this to an existing project, the docker specific files and folders you&amp;#39;ll be creating are:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;├── Dockerfile
├── Vagrantfile
├── d
└── docker/
    ├── postgres/
    ├── rails/
    ├── redis/
    └── scripts/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Setting Up Vagrant&lt;/h2&gt;

&lt;p&gt;If you&amp;#39;re completely new to Vagrant it&amp;#39;s worth briefly going through their getting started tutorial &lt;a href=&quot;http://docs.vagrantup.com/v2/getting-started/&quot;&gt;http://docs.vagrantup.com/v2/getting-started/&lt;/a&gt; at least through to the end of the provisioning section.&lt;/p&gt;

&lt;h3&gt;The Vagrantfile&lt;/h3&gt;

&lt;p&gt;The Vagrantfile should be stored in the root of your Rails project and look like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Commands required to setup working docker environment, link&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# containers etc.&lt;/span&gt;
&lt;span class=&quot;vg&quot;&gt;$setup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;SCRIPT&lt;/span&gt;
&lt;span class=&quot;sh&quot;&gt;# Stop and remove any existing containers&lt;/span&gt;
&lt;span class=&quot;sh&quot;&gt;docker stop $(docker ps -a -q)&lt;/span&gt;
&lt;span class=&quot;sh&quot;&gt;docker rm $(docker ps -a -q)&lt;/span&gt;

&lt;span class=&quot;sh&quot;&gt;# Build containers from Dockerfiles&lt;/span&gt;
&lt;span class=&quot;sh&quot;&gt;docker build -t postgres /app/docker/postgres&lt;/span&gt;
&lt;span class=&quot;sh&quot;&gt;docker build -t rails /app&lt;/span&gt;
&lt;span class=&quot;sh&quot;&gt;docker build -t redis /app/docker/redis/&lt;/span&gt;

&lt;span class=&quot;sh&quot;&gt;# Run and link the containers&lt;/span&gt;
&lt;span class=&quot;sh&quot;&gt;docker run -d --name postgres -e POSTGRESQL_USER=docker -e POSTGRESQL_PASS=docker postgres:latest&lt;/span&gt;
&lt;span class=&quot;sh&quot;&gt;docker run -d --name redis redis:latest&lt;/span&gt;
&lt;span class=&quot;sh&quot;&gt;docker run -d -p 3000:3000 -v /app:/app --link redis:redis --link postgres:db --name rails rails:latest&lt;/span&gt;

&lt;span class=&quot;dl&quot;&gt;SCRIPT&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Commands required to ensure correct docker containers&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# are started when the vm is rebooted.&lt;/span&gt;
&lt;span class=&quot;vg&quot;&gt;$start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;SCRIPT&lt;/span&gt;
&lt;span class=&quot;sh&quot;&gt;docker start postgres&lt;/span&gt;
&lt;span class=&quot;sh&quot;&gt;docker start redis&lt;/span&gt;
&lt;span class=&quot;sh&quot;&gt;docker start rails&lt;/span&gt;
&lt;span class=&quot;dl&quot;&gt;SCRIPT&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;VAGRANTFILE_API_VERSION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Vagrant&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;configure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Setup resource requirements&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;provider&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;virtualbox&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2048&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cpus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# need a private network for NFS shares to work&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;network&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;private_network&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;192.168.50.4&amp;quot;&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Rails Server Port Forwarding&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;network&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;forwarded_port&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;guest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Ubuntu&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;box&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;precise64&amp;quot;&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Install latest docker&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;provision&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;docker&amp;quot;&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Must use NFS for this otherwise rails&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# performance will be awful&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;synced_folder&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/app&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;nfs&amp;quot;&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Setup the containers when the VM is first&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# created&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;provision&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;shell&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;inline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$setup&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Make sure the correct containers are running&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# every time we start the VM.&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;provision&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;shell&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;always&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;inline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$start&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;The Vagrant Shared Folder&lt;/h3&gt;

&lt;p&gt;We want our Docker container to use the Rails app directly from our local filesystem so we can make changes on our development machine as we normally would and have these changes instantly reflected on our development server.&lt;/p&gt;

&lt;p&gt;Since we&amp;#39;re using Vagrant, first we have to share this folder from the local filesystem to the Vagrant virtual machine, which in turn shares this to the Docker container. If this is done using the default Virtualbox shared folders, then Disk IO and, consequently, Rails performance will be terrible. In my tests, it took something like 20 - 30 seconds to render a simple view.&lt;/p&gt;

&lt;p&gt;This can be resolved by using NFS shares, which are much faster but require some additional setup and entering the sudo password when starting the virtual machine. The following entry in your &lt;code&gt;Vagrantfile&lt;/code&gt; ensures NFS is used:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;synced_folder&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/app&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;nfs&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more on NFS shares and what&amp;#39;s required to set them up, see &lt;a href=&quot;https://docs.vagrantup.com/v2/synced-folders/nfs.html&quot;&gt;https://docs.vagrantup.com/v2/synced-folders/nfs.html&lt;/a&gt;. On OSX it should work out of the box, on Linux you may need to install &lt;code&gt;nfsd&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;Vagrant Up&lt;/h2&gt;

&lt;p&gt;Run &lt;code&gt;vagrant up&lt;/code&gt; in the root of your project to start the new development environment.&lt;/p&gt;

&lt;p&gt;You&amp;#39;ll be asked for your sudo password, this is required for NFS shared folders.&lt;/p&gt;

&lt;p&gt;Due to a bug in Virtualbox 4.3.10, you may run into the below error on mounting shared folders the first time you run &lt;code&gt;vagrant up&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;Failed to mount folders in Linux guest. This is usually because
the &amp;quot;vboxsf&amp;quot; file system is not available. Please verify that
the guest additions are properly installed in the guest and
can work properly. The command attempted was:

mount -t vboxsf -o uid=`id -u vagrant`,gid=`getent group vagrant | cut -d: -f3` vagrant /vagrant
mount -t vboxsf -o uid=`id -u vagrant`,gid=`id -g vagrant` vagrant /vagrant
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can resolve this by running:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;vagrant ssh -c &amp;#39;sudo ln -s /opt/VBoxGuestAdditions-4.3.10/lib/VBoxGuestAdditions /usr/lib/VBoxGuestAdditions&amp;#39;
vagrant reload
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;UPDATE (11/6/2014): This is resolved in Vagrant 1.6.3 so it&amp;#39;s definitely worth upgrading.&lt;/p&gt;

&lt;p&gt;This will create an Ubuntu Virtual Machine, install Docker on it and proceed to running the script defined in your &lt;code&gt;$setup&lt;/code&gt; variable in the Vagrantfile. In this example, for completeness, we build all of the containers from scratch rather than pulling them from an Index so the first time you run this, it will take a while.&lt;/p&gt;

&lt;h3&gt;The Setup Script&lt;/h3&gt;

&lt;p&gt;The first time we start the VM, this line in the Vagrantfile:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;provision&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;shell&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;inline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$setup&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Causes the shell script defined in the &lt;code&gt;$setup&lt;/code&gt; variable at the top of the file to be executed.&lt;/p&gt;

&lt;p&gt;This starts by stopping and removing any running Docker containers, just in case we&amp;#39;re rebuilding an existing system:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;docker stop &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;docker ps -a -q&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
docker rm &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;docker ps -a -q&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It then proceeds to build our Docker images from the Dockerfiles and tag them with user friendly names (&lt;code&gt;postgres&lt;/code&gt;, &lt;code&gt;rails&lt;/code&gt; and &lt;code&gt;redis&lt;/code&gt; respectively):&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;docker build -t postgres /app/docker/postgres
docker build -t rails /app
docker build -t redis /app/docker/redis/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Remember that &lt;code&gt;/app&lt;/code&gt; on the Ubuntu virtual machine is shared back to the root of your Rails directory, so this is using the Dockerfiles that can be viewed and edited as we normally would any file in a Rails project.&lt;/p&gt;

&lt;p&gt;This process can take a long time. Something I&amp;#39;ve encountered on quite a few occasions with the OSX + Vagrant + Docker combination is that any sort of interruption in network connection can cause the build process to hang indefinitely.&lt;/p&gt;

&lt;p&gt;If this happens, there&amp;#39;s no harm in killing the Vagrant provisioner (&lt;code&gt;ctrl&lt;/code&gt; &lt;code&gt;c&lt;/code&gt; twice), logging in with &lt;code&gt;vagrant ssh&lt;/code&gt; and then running the commands manually.&lt;/p&gt;

&lt;p&gt;Once the three images are built, the script starts containers from those images. The first two of these are quite simple:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;docker run -d --name postgres -e &lt;span class=&quot;nv&quot;&gt;POSTGRESQL_USER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;docker -e &lt;span class=&quot;nv&quot;&gt;POSTGRESQL_PASS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;docker postgres:latest
docker run -d --name redis redis:latest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Breaking these down:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;-d&lt;/code&gt; means run in the background&lt;/p&gt;

&lt;p&gt;&lt;code&gt;--name xyz&lt;/code&gt; gives the container the friendly name &lt;code&gt;xyz&lt;/code&gt; which we can use to refer to it later when we want to stop it or link it to another container&lt;/p&gt;

&lt;p&gt;&lt;code&gt;-e&lt;/code&gt; allows us to set environment variables in the container we&amp;#39;re creating. In this case, we&amp;#39;re setting the PostgreSQL username and password. See the section &amp;quot;Environment Variables in Linked Containers&amp;quot; for how we later access these credentials from our Rails app without hard-coding them.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;xyz:latest&lt;/code&gt; means start the container from the latest image tagged with &lt;code&gt;xyz&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I find it useful to think of a Docker image like a class definition. We use a Dockerfile (basically a list of shell commands) and the &lt;code&gt;docker build&lt;/code&gt; command to create an image.&lt;/p&gt;

&lt;p&gt;We then use the &lt;code&gt;docker run&lt;/code&gt; command to create a container from that image. The container is like an instance of a class. We can create multiple containers (a new one every time we use &lt;code&gt;docker run&lt;/code&gt;) from a single image. Each container (instance) is completely isolated from every other container, even if they are created from the same image.&lt;/p&gt;

&lt;p&gt;That said, we can also do things like create images based on the state of a container, so the analogy shouldn&amp;#39;t be extended much further(!)&lt;/p&gt;

&lt;p&gt;The final &lt;code&gt;docker run&lt;/code&gt; is a little more complicated:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;docker run -d -p &lt;span class=&quot;m&quot;&gt;3000&lt;/span&gt;:3000 -v /app:/app --link redis:redis --link postgres:db --name rails rails:latest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In addition to the operations already discussed for the Postgres and Redis containers:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;-p 3000:3000&lt;/code&gt; makes port 3000 from the container available as port 3000 on the host (the Virtualbox VM). Since we have Vagrant configured to forward port 3000 of the VM to your local machine 3000, you can access this container on port 3000 on your development machine as you would the normal Rails dev server (e.g. &lt;code&gt;http://localhost:3000&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;&lt;code&gt;--link postgres:db&lt;/code&gt; establishes a link between the container you&amp;#39;re starting (your Rails app) and the Postgres container you started previously. This is in the format &lt;code&gt;name:alias&lt;/code&gt; and will make ports exposed by the Postgres container available to the Rails container.&lt;/p&gt;

&lt;h3&gt;Environment Variables in Linked Containers&lt;/h3&gt;

&lt;p&gt;Linking will also make the environment variables from the Postgres container available to the Rails container with the prefix &lt;code&gt;ALIAS&lt;/code&gt;. When you expose a port in a container, a corresponding environment variable is created within that container.&lt;/p&gt;

&lt;p&gt;The Postgres container exposes port 5432 which leads to a corresponding environment variable &lt;code&gt;PORT_5432_TCP_ADDR&lt;/code&gt; which will contain the IP address of the Postgres container. We use this in our &lt;code&gt;database.yml&lt;/code&gt; to automatically connect to the Postgres container database, irrespective of whether its IP has changed.&lt;/p&gt;

&lt;p&gt;Since we used &lt;code&gt;db&lt;/code&gt; as our alias for this container, in our Rails container, we will therefore have an environment variable &lt;code&gt;DB_PORT_5432_TCP_ADDR&lt;/code&gt; available which contains the IP of this container.&lt;/p&gt;

&lt;p&gt;Therefore, we use &lt;code&gt;ENV[&amp;#39;DB_PORT_5432_TCP_ADDR&amp;#39;]&lt;/code&gt; to access this value in &lt;code&gt;database.yml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The command to build the Postgres image includes:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;-e &lt;span class=&quot;nv&quot;&gt;POSTGRESQL_USER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;docker -e &lt;span class=&quot;nv&quot;&gt;POSTGRESQL_PASS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;docker
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;which sets environment variables in the docker container with the database access credentials. These will be available in your Rails container as &lt;code&gt;DB_ENV_POSTGRESQL_USER&lt;/code&gt; and &lt;code&gt;DB_ENV_POSTGRESQL_PASS&lt;/code&gt; respectively (as seen in &lt;code&gt;database.yml&lt;/code&gt;). Notice the format &lt;code&gt;ALIAS_ENV_VARIABLE_NAME&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s worth reading &lt;a href=&quot;http://docs.docker.io/reference/run/#env-environment-variables&quot;&gt;http://docs.docker.io/reference/run/#env-environment-variables&lt;/a&gt; for more on the environment variables available. It&amp;#39;s also interesting to inspect the contents of &lt;code&gt;ENV&lt;/code&gt; from a Rails console once the full environment is up and running.&lt;/p&gt;

&lt;h3&gt;Why make this a shell script?&lt;/h3&gt;

&lt;p&gt;The few lines in our &lt;code&gt;$setup&lt;/code&gt; script are everything we need to build and run our application on any machine with Docker installed. If you wanted to run this application in development on a Linode, you could just create a new node, install Docker, upload your code and run this same script, and you&amp;#39;d have a working development version of your application on this server.&lt;/p&gt;

&lt;p&gt;Later in this series of tutorials I&amp;#39;ll demonstrate how the commands in this script can be adapted to form the basis of a production deployment with Docker. Getting familiar with the commands as part of the day-to-day development workflow means that working with the production stack is much less of a learning curve for any developer on the team.&lt;/p&gt;

&lt;h2&gt;Interacting with the Rails Application&lt;/h2&gt;

&lt;p&gt;Once the above process is complete, the Rails application should be available in a browser on your local development machine at &lt;code&gt;http://localhost:3000&lt;/code&gt;. However, the first thing you&amp;#39;re likely to see is an error that the database does not exist.&lt;/p&gt;

&lt;p&gt;Normally at this stage we could simply use &lt;code&gt;bundle exec rake db:create db:migrate&lt;/code&gt; to create the database and apply any migrations. Now that we&amp;#39;re running our application in a Docker container, the process is slightly different.&lt;/p&gt;

&lt;p&gt;In this configuration, each Docker container runs a single process. In the &lt;code&gt;$setup&lt;/code&gt; script, the container for the Rails server is started with:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;docker run -d -p &lt;span class=&quot;m&quot;&gt;3000&lt;/span&gt;:3000 -v /app:/app --link redis:redis --link postgres:db --name rails rails:latest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The Docker daemon expects the second, non-parametrised argument to the &lt;code&gt;run&lt;/code&gt; command to be the command to be executed within the container. Since we don&amp;#39;t specify a command to be run within the container, the default command from the &lt;code&gt;Dockerfile&lt;/code&gt; is run. This is specified in &lt;code&gt;/Dockerfile&lt;/code&gt; with:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;CMD &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/start-server.sh&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Which makes the default action of the container to run the script in &lt;code&gt;/start-server.sh&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /app
bundle install
bundle &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; unicorn -p &lt;span class=&quot;m&quot;&gt;3000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is equivalent to starting the container with:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;docker run -d -p &lt;span class=&quot;m&quot;&gt;3000&lt;/span&gt;:3000 -v /app:/app --link redis:redis --link postgres:db --name rails rails:latest bash -c &lt;span class=&quot;s2&quot;&gt;&amp;quot;cd /app &amp;amp;&amp;amp; bundle install &amp;amp;&amp;amp; bundle exec unicorn -p 3000&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To run other commands in the container based on your Rails image, we can construct equivalent &lt;code&gt;docker run&lt;/code&gt; commands and run them from within the Vagrant virtual machine (&lt;code&gt;vagrant ssh&lt;/code&gt;). So to run &lt;code&gt;bundle exec rake db:create db:migrate&lt;/code&gt; we could ssh into the Vagrant host and then use:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;docker run -i -t -v /app:/app --link redis:redis --link postgres:db  --rm rails:latest bash -c &lt;span class=&quot;s2&quot;&gt;&amp;quot;cd /app &amp;amp;&amp;amp; bundle exec rake db:create db:migrate&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This starts a new container based on the Rails image and runs &lt;code&gt;db:create&lt;/code&gt; and &lt;code&gt;db:migrate&lt;/code&gt; with it. Notice the additional command line flags:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;-i -t&lt;/code&gt; attaches the console to Standard In, Out and Error, then assigns a TTY so that we can interact with it. This is required when running interactive commands such as &lt;code&gt;bundle exec rails console&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;--rm&lt;/code&gt; means that the container will be removed once execution completes.&lt;/p&gt;

&lt;p&gt;Doing this every time is cumbersome, so the example configuration includes some simple shell scripts to automate this. The first part of this is the file &lt;code&gt;d&lt;/code&gt; in the root of the Rails project. This automates sshing into the vagrant host and executing a single command, for example:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;./d rc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;invokes:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;vagrant ssh -c &lt;span class=&quot;s2&quot;&gt;&amp;quot;sh /app/docker/scripts/rc.sh&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Which is the same as sshing into the Vagrant host and executing &lt;code&gt;./app/docker/scripts/rc.sh&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The script &lt;code&gt;/app/docker/scripts/rc.sh&lt;/code&gt; contains a &lt;code&gt;docker run&lt;/code&gt; command:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;docker run -i -t -v /app:/app --link redis:redis --link postgres:db  --rm rails:latest bash -c &lt;span class=&quot;s2&quot;&gt;&amp;quot;cd /app &amp;amp;&amp;amp; bundle exec rails c&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Which has the effect of starting a Rails console in a new container.&lt;/p&gt;

&lt;p&gt;You can run &lt;code&gt;./d&lt;/code&gt; without any arguments to see which functions it provides shortcuts for. It also provides a generic &lt;code&gt;cmd&lt;/code&gt; option:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;./d cmd &lt;span class=&quot;s2&quot;&gt;&amp;quot;bundle exec any_command&amp;quot;&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;which allows arbitrary commands to be executed within the &lt;code&gt;/app&lt;/code&gt; directory of a new Rails container. So we could, for example, execute:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;./d cmd &lt;span class=&quot;s2&quot;&gt;&amp;quot;bundle exec rake db:create db:migrate&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to create and migrate the database.&lt;/p&gt;

&lt;p&gt;These don&amp;#39;t have to be Rails commands, we could equally execute:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;./d cmd &lt;span class=&quot;s2&quot;&gt;&amp;quot;ls&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to get the directory listing of &lt;code&gt;/app&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;When interacting with the Rails application like this, it&amp;#39;s important to remember that every command is executed in a new container and hence is completely isolated from any other command. Therefore any local resources created in one container are not normally available to any other container and will be lost when the command terminates and the container is discarded.&lt;/p&gt;

&lt;p&gt;The exception in the case of this development configuration is the &lt;code&gt;/app/&lt;/code&gt; directory, which is a shared folder and, therefore, any files created here will persist and be available to all containers. It should be kept in mind that, in a production configuration, there should be no such shared local storage and so this should not be relied upon for any sort of shared state. It&amp;#39;s worth reading the Twelve Factor App guide for more on how sharing state should be approached &lt;a href=&quot;http://12factor.net/&quot;&gt;http://12factor.net/&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Bootstrapping the Database&lt;/h2&gt;

&lt;p&gt;Generally, when setting up a development environment, I want the development database populated with a recent dump of data from production. Sometimes this is a direct dump and sometimes it&amp;#39;s a segment of the production data, or modified version of production with sensitive information removed. Either way, this normally takes the form of a .sql file (assuming MySQL or Postgres). It&amp;#39;s useful to be able to quickly restore future dumps to the development database.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;./d&lt;/code&gt; convenience script provides a simple interface to this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;/span&gt;./d restore-db
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Drop, create and migrate the development database&lt;/li&gt;
&lt;li&gt;Look for a zip file called &lt;code&gt;db/current.sql.zip&lt;/code&gt; in the Rails directory structure&lt;/li&gt;
&lt;li&gt;Unzip it within a new Docker container&lt;/li&gt;
&lt;li&gt;Import the file &lt;code&gt;current.sql&lt;/code&gt; from the unzipped files to the development database using the &lt;code&gt;psql&lt;/code&gt; utility.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note the naming, it expects a zip archive at &lt;code&gt;db/current.sql.zip&lt;/code&gt; which contains a single file called &lt;code&gt;current.sql&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;Upcoming Tutorials&lt;/h2&gt;

&lt;p&gt;I&amp;#39;ll be releasing further tutorials over the next few months on the topics below, you can follow me on twitter &lt;a href=&quot;http://www.twitter.com/talkingquickly&quot;&gt;@talkingquickly&lt;/a&gt; for updates. If you run into any issues with this tutorial, feel free to tweet or email me, ben@talkingquickly.co.uk.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Setting up a private index so you can build your Docker images centrally and then just pull them when you start a new development environment, rather than rebuilding each time&lt;/li&gt;
&lt;li&gt;Building production images&lt;/li&gt;
&lt;li&gt;Automating building production images and pushing them to a private index&lt;/li&gt;
&lt;li&gt;Deploying production images with Capistrano + a Private Index&lt;/li&gt;
&lt;/ul&gt;
</content>
<summary>Onboarding new developers to a Rails projects is still a far harder task than it should be. A big part of this is that setting up a development environment for an app or suite of apps, getting the correct ruby versions, database versions etc running locally, can in many cases take upwards of a day. A combination of Vagrant and Docker can make this a thing of the past.</summary>
</entry>
</feed>
